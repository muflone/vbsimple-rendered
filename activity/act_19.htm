<html><!-- #BeginTemplate "/Templates/Richieste.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Creare un file di collegamento</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo"><!-- #BeginEditable "TITOLO" -->Creare un file di collegamento<!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/activity.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"> 
      <table width="100%"><tr><td align="left" nowrap><style type="text/css">
@import url(http://www.google.com/cse/api/branding.css);
</style>
<div class="cse-branding-right" style="background-color:#FFFFFF;color:#000000">
  <div class="cse-branding-form">
    <form action="http://www.google.it/cse" id="cse-search-box">
      <div>
        <input type="hidden" name="cx" value="partner-pub-8218922773694577:rv2o52-qh5a" />
        <input type="hidden" name="ie" value="ISO-8859-1" />
        <input type="text" name="q" size="20" />
        <input type="submit" name="sa" value="Cerca" />
      </div>
    </form>
  </div>
  <div class="cse-branding-logo">
    <img src="http://www.google.com/images/poweredby_transparent/poweredby_FFFFFF.gif" alt="Google" />
  </div>
  <div class="cse-branding-text">
    Ricerca personalizzata
  </div>
</div></td><td align="right">
      <p align="right" class="size3">Richiesta di: <!-- #BeginEditable "RICHIEDENTE" -->Alessandro<!-- #EndEditable --> 
        - <!-- #BeginEditable "DATARICHIESTA" -->14 Febbraio 2002<!-- #EndEditable --><br>
        Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><!-- #BeginEditable "DIFFICOLTA" --><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level3.gif" width="17" height="18" align="absmiddle"> 
        3<!-- #EndEditable --> / 5 </p>
</td></tr></table>
      <script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" -->
      <p><i>Come posso creare un file di collegamento in Visual Basic?<br>
        Dovrei realizzare lo stesso comando <b>Crea collegamento</b> che si fa 
        con il tasto destro del mouse quando si trascina un file da una cartella 
        ad un'altra o al Desktop.</i></p>
      <hr>
      <p>Esistono due soluzioni per effettuare questa operazione: una molto semplice 
        ma altrettanto limitata ed una molto pi&ugrave; complessa e completa. 
        Il codice della seconda soluzione &egrave; presente nel CD di Visual Basic 
        alla cartella <b>ShellLnk</b> ma non &egrave; affatto commentato; in quest'articolo 
        tratteremo invece la soluzione pi&ugrave; semplice che utilizzer&agrave; 
        la <a href="../glossary/l.htm#LIBRERIA">libreria</a> utilizzata dal Kit 
        di installazione dei progetti, talvolta chiamato <i><b>Autocomposizione 
        Installazione</b></i> (per Visual Basic 5) e talvolta <i><b>Creazione 
        guidata pacchetti di installazione</b></i> o <i><b>Package and Deployment 
        Wizard</b></i> (per Visual Basic 6).</p>
      <p>La limitazione pricipale riguarda l'impossibilit&agrave; di scegliere 
        un'icona differente da quella a cui il collegamento punta. Esiste anche 
        un'altra apparente limitazione che obbliga il programmatore a fare riferimento 
        alla cartella in cui &egrave; contenuta la cartella Programmi del Menu 
        Avvio del computer. &Egrave; possibile superare quest'ultima limitazione 
        in una maniera che vedremo in seguito.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p><img src="../images/activity/att19_01.png" width="193" height="159" align="right" alt="Figura 1">Ci&ograve; 
        che bisogna tenere in mente &egrave; che il collegamento sar&agrave; fatto 
        in maniera relativa alla cartella Programmi del Menu Avvio. In una struttura 
        come quella mostrata nella figura a fianco, se dovessimo creare un collegamento 
        nella cartella Programmi del Menu Avvio, il percorso da utilizzare sar&agrave; 
        un semplice <code>&quot;.&quot;</code> in quanto cartella di riferimento. 
      </p>
      <p>Se dovessimo invece creare il collegamento sul Desktop sar&agrave; necessario 
        utilizzare come percorso relativo <code>&quot;..\..\Desktop&quot;</code>.<br>
        Il livello superiore (<code>&quot;..\&quot;</code>) indica appunto il 
        Menu Avvio, al di fuori della cartella Programmi e l'ulteriore livello 
        superiore (<code>&quot;..\..\&quot;</code>) indicher&agrave; la cartella 
        Windows.</p>
      <p><img src="../images/activity/att19_02.png" width="259" height="66" align="right" alt="Figura 2">Il 
        progetto che svilupperemo in quest'articolo si compone di un solo form 
        con 4 semplici controlli: una <i>Label</i> a puro scopo descrittivo di 
        nome <b>lblTitoloCollegamento</b>, una <i>TextBox</i> <img src="../images/controls/textbox.gif" width="25" height="25" align="absmiddle">di 
        nome <b>txtTitoloCollegamento</b> in cui l'utente potr&agrave; inserire 
        il titolo ovvero la caption del collegamento creato. A fianco di questi 
        avremo due semplici <i>CommandButton</i> di nome <b>cmdCollegamentoMenuAvvio</b> 
        e <b>cmdCollegamentoDesktop</b> che effettueranno il collegamento sulle 
        due cartelle indicate.</p>
      <p>Sono presentate tre soluzioni, una per ogni versione di Visual Basic, 
        dalla 4 alla 6 ognuna delle quali utilizza la sua libreria di riferimento. 
        Poich&eacute; le tre funzioni <a href="../glossary/a.htm#API">API</a> 
        hanno lo stesso nome avremmo preferito utilizzare le istruzioni di compilazione 
        condizionale ma purtroppo il <a href="../glossary/p.htm#PROTOTIPO">prototipo</a> 
        della funzione (leggi la dichiarazione) &egrave; leggermente diverso; 
        per tale ragione utilizzeremo una funzione che in base alla versione di 
        Visual Basic richiesta richiamer&agrave; la funzione relativa.</p>
      <ol class="codicevb" start="1">
        <li>Option Explicit</li>
        <li></li>
        <li>Private Declare Function VB4CreateShellLink Lib &quot;STKIT432.DLL&quot; 
          Alias &quot;fCreateShellLink&quot; (ByVal lpstrFolderName As String, 
          ByVal lpstrLinkName As String, ByVal lpstrLinkPath As String, ByVal 
          lpstrLinkArgs As String) As Long</li>
        <li>Private Declare Function VB5CreateShellLink Lib &quot;VB5STKIT.DLL&quot; 
          Alias &quot;fCreateShellLink&quot; (ByVal lpstrFolderName As String, 
          ByVal lpstrLinkName As String, ByVal lpstrLinkPath As String, ByVal 
          lpstrLinkArgs As String) As Long</li>
        <li>Private Declare Function VB6CreateShellLink Lib &quot;VB6STKIT.DLL&quot; 
          Alias &quot;fCreateShellLink&quot; (ByVal lpstrFolderName As String, 
          ByVal lpstrLinkName As String, ByVal lpstrLinkPath As String, ByVal 
          lpstrLinkArgs As String, ByVal fPrivate As Long, ByVal sParent As String) 
          As Long</li>
      </ol>
      <p>Alle righe 3-5 sono presentate le 3 funzioni <a href="../glossary/a.htm#API">API</a> 
        <i>fCreateShellLink</i> che si differenziano per il nome della libreria 
        utilizzata: <i><b>STKIT432.DLL</b></i> per la versione 4 a 32 bit di VB, 
        <i><b>VB5STKIT.DLL</b></i> per la versione 5 di VB ed infine <i><b>VB6STKIT.DLL</b></i> 
        per la versione 6 di VB. In pi&ugrave; l'ultima versione richiede due 
        parametri aggiuntivi non presenti nelle altre due versioni. Per tale ragione 
        abbiamo ridefinito i nomi delle funzioni API tramite degli <a href="../glossary/a.htm#ALIAS">Alias</a>.</p>
      <p>Le funzioni che prima si chiamavano <i>fCreateShellLink</i> all'interno 
        del nostro progetto hanno i nomi <i>VB4CreateShellLink</i>, <i>VB5CreateShellLink</i> 
        e <i>VB6CreateShellLink</i>.</p>
      <p>Le funzioni API <i>fCreateShellLink</i> nelle versioni 4 e 5 richiedono 
        il passggio di 4 parametri stringa: il primo &egrave; il percorso della 
        cartella in cui creare il collegamento, <b class="sottolineato">relativa</b> 
        alla cartella Programmi del Menu Avvio; il secondo &egrave; il titolo 
        del collegamento ovvero il nome che avr&agrave; il file di collegamento; 
        il terzo parametro indica il percorso completo del file da collegare e 
        l'ultimo parametro infine consente il passaggio di ulteriori argomenti 
        al programma da richiamare (<a href="../howto/ht_018.htm">vedi a tal scopo 
        l'HowTo dedicato alla lettura dei parametri sulla riga di comando</a>). 
        L'ultima versione utilizza gli stessi parametri ma ne richiede due ulteriori 
        di nessuna importanza. <img
        src="../images/icons/smile%20wink.gif" width="15" height="15" border="0" align="absmiddle"></p>
      <ol class="codicevb" start="6">
        <li>Private Declare Function LoadLibrary Lib &quot;kernel32&quot; Alias 
          &quot;LoadLibraryA&quot; (ByVal lpLibFileName As String) As Long</li>
        <li>Private Declare Function FreeLibrary Lib &quot;kernel32&quot; (ByVal 
          hLibModule As Long) As Long</li>
        <li></li>
        <li>Private Enum VersioneVB</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;VisualBasicUnknown = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;VisualBasic4 = 4</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;VisualBasic5 = 5</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;VisualBasic6 = 6</li>
        <li>End Enum</li>
        <li></li>
        <li>Private AppPath As String</li>
        <li></li>
      </ol>
      <p>Alla riga 6 abbiamo dichiarato la funzione API <i>LoadLibrary</i> che 
        utilizzeremo per determinare automaticamente quale versione delle funzioni 
        API <i>fCreateShellLink</i> utilizzare. La funzione <i>LoadLibrary</i> 
        infatti consente di caricare in memoria una <a href="../glossary/d.htm#DLL">DLL</a> 
        specificandone il nome. La funzione <i>FreeLibrary</i> alla riga 7 consente 
        l'operazione inversa ovvero lo scaricamento dalla memoria di una DLL caricata.</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Alle righe 9-14 si presenta una nuova <a href="../glossary/e.htm#ENUMERAZIONE">enumerazione</a>: 
        <b>VersioneVB</b> che utilizzeremo per specificare la versione di VB in 
        uso per l'utilizzo della funzione API <i>fCreateShellLink</i> relativa 
        oppure lasciare fare alla nostra funzione di ricerca in caso di valore 
        <b> <i>VisualBasicUnknown</i></b>.</p>
      <p>Alla riga 16 abbiamo dichiarato una variabile di nome <b>AppPath</b> 
        che conterr&agrave; il percorso del file eseguibile del nostro progetto.</p>
      <ol class="codicevb" start="18">
        <li>Private Function CreateShellLink(ByVal intVersione As VersioneVB, 
          ByVal strGruppo As String, ByVal strTitolo As String, ByVal strPath 
          As String) As Boolean</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim intConta As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim lngRis As Long</li>
        <li></li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;On Error GoTo Err_Handler</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If intVersione = VisualBasicUnknown Then</li>
      </ol>
      <p>La nostra funzione <i>CreateShellLink</i> si occuper&agrave; di richiamare 
        la funzione API fCreateShellLink richiesta oppure determiner&agrave; in 
        maniera automatica quale utilizzare.<br>
        Essa richiede il passaggio di un valore dell'<a href="../glossary/e.htm#ENUMERAZIONE">enumerazione</a> 
        <img src="../images/ide/enumeraz.gif" width="16" height="16" align="absmiddle"> 
        <b>VersioneVB</b> ed i tre parametri minimi da fornire alla funzione API.</p>
      <p>Alla riga 22 abbiamo inserito un semplice gestore degli errori per evitare 
        il blocco del programma nel caso che la DLL specificata non esista. Se 
        invece il programma si affida alla ricerca automatica della DLL da utilizzare 
        (riga 23) verr&agrave; fatto un tentativo di caricamento delle 3 librerie.</p>
      <ol class="codicevb" start="24">
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For intConta = 4 To 
          6</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lngRis 
          = LoadLibrary(Choose(intConta - 3, &quot;STKIT432&quot;, &quot;VB5STKIT&quot;, 
          &quot;VB6STKIT&quot;))</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call 
          FreeLibrary(lngRis)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If 
          lngRis &lt;&gt; 0 Then intVersione = intConta</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next intConta</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End If</li>
        <li></li>
      </ol>
      <p>Alla riga 24 inizia il ciclo di ricerca: il valore minimo &egrave; il 
        valore 4 mentre il massimo &egrave; il 6. L'elaborazione che effettuer&agrave; 
        sar&agrave; pertanto di 3 cicli. Alla riga 25 viene richiamata la funzione 
        API <i>LoadLibrary</i> per caricare la libreria il cui nome &egrave; dato 
        dal risultato della funzione <b>Choose</b>, un'istruzione molto semplice 
        ed altrettanto sconosciuta a molti.</p>
      <p>Essa consente di estrarre un valore da un elenco di valori. L'elenco 
        nel nostro caso sono i nomi delle 3 librerie: STKIT432, VB5STKIT e VB6STKIT. 
        In base al primo parametro (intConta - 3) sar&agrave; estratto il valore 
        corrispondente dall'elenco. Il risultato di tale elaborazione sar&agrave; 
        il nome di una delle 3 librerie. Tale nome verr&agrave; quindi passato 
        alla funzione <i>LoadLibrary</i>.</p>
      <p>Se la libreria pu&ograve; essere caricata la variabile <b>lngRis</b> 
        conterr&agrave; l'<a href="../glossary/h.htm#HANDLE">handle</a> del modulo 
        caricato; nel caso contrario <b>lngRis</b> conterr&agrave; il valore 0. 
        Subito dopo il caricamento, la stessa libreria viene scaricata dalla memoria 
        perch&eacute; non utile al nostro scopo (riga 26).</p>
      <p>Se la libreria viene caricata (ovvero il valore di lngRis &egrave; diverso 
        da 0) sar&agrave; possibile per il programma utilizzare tale versione 
        di VB. Pertanto la variabile <b>intVersione</b> sar&agrave; posta uguale 
        alla variabile <b>intConta</b>.</p>
      <p>All'uscita del ciclo la variabile <b>intVersione</b> conterr&agrave; 
        la versione pi&ugrave; alta a disposizione utilizzabile per creare il 
        file di collegamento. Se la libreria VB6STKIT &egrave; presente sar&agrave; 
        riportato il valore 6, altrimenti saranno riportati i valori 5 o 4 in 
        base all'esistenza delle relative librerie.</p>
      <ol class="codicevb" start="31">
        <li>&nbsp;&nbsp;&nbsp;&nbsp;lngRis = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If intVersione = VisualBasic6 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lngRis = VB6CreateShellLink(strGruppo, 
          strTitolo, strPath, &quot;&quot;, True, &quot;$(Programs)&quot;)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;ElseIf intVersione = VisualBasic5 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lngRis = VB5CreateShellLink(strGruppo, 
          strTitolo, strPath, &quot;&quot;)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;ElseIf intVersione = VisualBasic4 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lngRis = VB4CreateShellLink(strGruppo, 
          strTitolo, strPath, &quot;&quot;)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End If</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;CreateShellLink = CBool(lngRis)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Exit Function</li>
        <li>Err_Handler:</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;CreateShellLink = False</li>
        <li>End Function</li>
        <li></li>
      </ol>
      <p>Prima di procedere alla creazione del file di collegamento la variabile 
        lngRis sar&agrave; azzerata allo scopo di poter riconoscere se la chiamata 
        alla funzione API ha eseguito il suo scopo.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Alle righe 32-38 viene chiamata la funzione API in corrispondenza al 
        valore di <b>intVersione</b>. <i>VB6CreateShellLink</i> per la versione 
        6, <i>VB5CreateShellLink</i> per il valore 5 e <i>VB4CreateShellLink</i> 
        per la versione 4. Tutte e tre le chiamate restituiscono un valore nella 
        variabile <b>lngRis</b>. Pertanto il valore di uscita dalla funzione dipender&agrave; 
        dal valore di <b>lngRis</b>. Il valore <i><b>False</b></i> indicher&agrave; 
        che il collegamento non &egrave; stato creato.</p>
      <p>Alle righe 41-42 abbiamo la semplicissima gestione degli errori, impostando 
        come valore di ritorno della nostra funzione il valore <i><b>False</b></i> 
        indicativo che il collegamento non &egrave; stato creato.</p>
      <ol class="codicevb" start="45">
        <li>Private Sub Form_Load()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;AppPath = App.Path</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Right$(AppPath, 1) &lt;&gt; &quot;\&quot; 
          Then AppPath = AppPath &amp; &quot;\&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;AppPath = AppPath &amp; App.EXEName &amp; 
          &quot;.exe&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtTitoloCollegamento.Text = App.Title</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p>La prima operazione che verr&agrave; eseguita al caricamento del form 
        riguarda la costruzione del percorso del file eseguibile cui far puntare 
        il collegamento. Alla riga 46 viene innanzitutto recuperato il percorso 
        della cartella in cui &egrave; eseguito il progetto. Se tale cartella 
        non &egrave; la radice del disco ovvero il suo percorso non termina con 
        un &quot;\&quot;, sar&agrave; necessario aggiungerlo alla fine.<br>
        Alla riga 48 viene finalmente recuperato il nome del file eseguibile e 
        le tre stringhe vengono concatenate tra loro nella variabile <b>AppPath</b>.</p>
      <p>Alla riga 49 viene inizializzato il contenuto della casella di testo 
        <b>txtTitoloCollegamento</b> con il titolo del progetto in esecuzione. 
        L'utente potr&agrave; tuttavia modificare tale valore a suo piacimento.</p>
      <ol class="codicevb" start="52">
        <li>Private Sub cmdCollegamentoMenuAvvio_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp; Call CreateShellLink(VisualBasicUnknown, 
          &quot;.&quot;, txtTitoloCollegamento.Text, AppPath)</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub cmdCollegamentoDesktop_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Call CreateShellLink(VisualBasicUnknown, &quot;..\..\Desktop&quot;, 
          txtTitoloCollegamento.Text, AppPath)</li>
        <li>End Sub</li>
      </ol>
      <p>La creazione del file di collegamento si conclude con una semplicissima 
        chiamata alla funzione <b>CreateShellLink</b>. Nel nostro esempio verr&agrave; 
        utilizzato il rilevamento automatico della versione della libreria da 
        utilizzare. Avremmo potuto fornire un valore qualunque dell'enumerazione 
        <i> <b>VersioneVB</b></i>; il vantaggio dell'utilizzare il rilevamento 
        automatico (<i><b>VisualBasicUnknown</b></i>) sta nel fatto che il programma 
        &egrave; in grado di funzionare anche nel caso che la libreria da utilizzare 
        non sia installata nel sistema. Il programma infatti prover&agrave; a 
        cercare le tre librerie e cos&igrave; il programma &egrave; in grado di 
        adattarsi al sistema in cui viene installato. Naturalmente deve esistere 
        almeno una delle tre librerie: <b>STKIT432.DLL</b>, <b>VB5STKIT.DLL</b> 
        o <b>VB6STKIT.DLL</b>.</p>
      <p>La riga 53 crea il collegamento nella cartella Programmi del Menu Avvio 
        ed a tale scopo il percorso relativo della cartella sar&agrave; <code>&quot;.&quot;</code> 
        (come visto in precedenza).<br>
        Per creare invece il file di collegamento sul Desktop utilizzeremo il 
        riferimento al percorso relativo <code>&quot;..\..\Desktop&quot;</code>.</p>
      <p>Gli altri parametri che forniremo saranno il titolo del collegamento, 
        ovvero il valore contenuto nella casella di testo <b>txtTitoloCollegamento</b> 
        ed il percorso del file eseguibile recuperato in precedenza e memorizzato 
        nella variabile <b>AppPath</b>. Non forniremo invece nessun parametro 
        extra al file eseguibile.</p>
      <p>La dimostrazione del progetto &egrave; semplice quanto banale. Baster&agrave; 
        inserire il titolo nella casella di testo e premere uno dei due pulsanti 
        in funzione della locazione in cui si vuole creare il file di collegamento.</p>
      <p>Resta da sciogliere solo un semplice dubbio: come creare un collegamento 
        in una cartella differente? Infatti la funzione <i>fCreateShellLink</i> 
        utilizza un percorso relativo alla cartella Programmi del Menu Avvio e 
        potrebbe rendersi difficoltosa la costruzione di un percorso di un'altra 
        cartella oppure di un altro disco differente da quello in cui si trova 
        il Menu Avvio stesso.</p>
      <p>La soluzione &egrave; altrettanto semplice: baster&agrave; creare il 
        file di collegamento in una cartella conosciuta quale il Desktop o il 
        Menu Avvio, recuperare il percorso assoluto di questa cartella e poi spostare 
        il file dalla prima cartella a quella in cui desideriamo inserire il collegamento.</p>
      <p>Potremmo ad esempio creare un collegamento sul Desktop e poi spostare 
        (oppure copiare ed in seguito eliminare l'originale) il file di collegamento 
        nella nostra cartella <code>&quot;D:\Documenti&quot;</code>. Le istruzioni 
        per spostare, copiare ed eliminare un file sono rispettivamente <i>Name</i>, 
        <i>FileCopy</i> e <i>Kill</i>.<br>
        <br>
      </p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --> 
      <p>Ignorando le limitazioni della soluzione applicata e le eventuali complicazioni 
        in caso di una cartella o di un disco differenti, il progetto si presenta 
        davvero semplicissimo.</p>
      <p>L'unico appunto che &egrave; doveroso fare riguarda la distribuzione 
        della libreria utilizzata per la creazione del file di collegamento. Sar&agrave; 
        infatti necessario assicurarsi che essa venga copiata nella cartella System 
        o System32 del computer in cui viene utilizzata.</p>
      <p>Con alcune versioni di Visual Basic 6 la documentazione allegata non 
        specifica che la funzione <i>fCreateShellLink</i> della libreria VB6STKIT.DLL 
        richiede due parametri aggiuntivi, anzi un esempio presente sul CD utilizza 
        la stessa dichiarazione delle librerie precedenti. Si tratta ovviamente 
        di una svista dello staff <a href="../glossary/m.htm#MICROSOFT">Microsoft</a>, 
        corretta soltanto in seguito.</p>
      <!-- #EndEditable --><!-- #BeginEditable "CREDITS" --> 
      <p align="right" class="credits2"><a href="../vbmail.htm?id=1">Fibia 
        FBI</a><br>
        27 Febbraio 2002<br>
        Rivisto e corretto il 24 Marzo 2002</p>
      <!-- #EndEditable --><!-- #BeginLibraryItem "/Library/Toolbar.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><a href="index.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna all'introduzione delle Richieste dei lettori</a></td>
    <td align="right">&nbsp;</td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
