<html><!-- #BeginTemplate "/Templates/Info.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Informazioni aggiuntive sulla compilazione condizionale</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo">Informazioni aggiuntive <!-- #BeginEditable "TITOLO" -->sulla 
    compilazione condizionale<!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/infos.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"><script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" -->
      <p>Una caratteristica molto particolare di Visual Basic &egrave; quella 
        di poter scrivere del codice che si comporti in maniere differenti in 
        base ad alcuni valori costanti decisi prima della <a href="../glossary/c.htm#COMPILAZIONE">compilazione</a> 
        definitiva. &Egrave; quindi possibile scrivere un unico progetto e compilarlo 
        una prima volta facendo uso di certi dati ed una seconda volta utilizzando 
        una differente soluzione.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>La sua utilit&agrave; si rivela in quelle rare occasioni in cui il codice 
        sviluppato funziona correttamente con un sistema quale Windows 9x ma non 
        funziona in ambiente Windows NT. In queste situazioni generalmente si 
        ricorre ad una rilevazione del sistema in uso e si determina quale segmento 
        di codice eseguire con una semplice valutazione. Tramite la compilazione 
        condizionale invece &egrave; possibile generare due eseguibili differenti: 
        uno studiato per il primo ambiente ed un altro studiato per il secondo 
        ambiente.</p>
      <p>La compilazione condizionale entra in ballo quando si vogliono includere 
        o escludere certe parti del codice in una certa versione del programma 
        compilato. Ad esempio &egrave; possibile aggiungere una serie di controlli, 
        registrazioni e messaggi nella versione di sviluppo per consentire il 
        <a href="../glossary/d.htm#DEBUG">debug</a> quando non &egrave; possibile 
        farlo all'interno dell'<a href="../glossary/i.htm#IDE">IDE</a> di Visual 
        Basic ed eliminare tutte le registrazioni nella versione definitiva di 
        un software.</p>
      <p>Ancora &egrave; possibile compilare una prima versione limitata di un 
        software e rilasciarla per una prova gratuita. Naturalmente non c'&egrave; 
        pirata informatico che possa resistere! Non solo il codice escluso non 
        verr&agrave; eseguito ma addirittura non sar&agrave; nemmeno presente 
        all'interno del file compilato.</p>
      <p>&Egrave; altres&igrave; possibile sviluppare due funzioni totalmente 
        differenti ed incompatibili tra loro e decidere in fase di compilazione 
        quale delle due utilizzare.</p>
      <p>La compilazione condizionale si basa sull'uso di una istruzione base 
        ed un costrutto di controllo:</p>
      <blockquote class="codicevb"> #Const COSTANTE = VALORE</blockquote>
      <p>Consente di definire una costante di compilazione condizionale ed assegnarle 
        un valore. La stessa costante pu&ograve; essere definita mediante le propriet&agrave; 
        del Progetto alla voce <i><b>Crea</b></i>. Assegnato un valore ad una 
        costante compilazione condizionale &egrave; possibile valutare tale valore 
        mediante il costrutto seguente:</p>
      <blockquote class="codicevb"> #If ESPRESSIONE Then<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&lt;istruzioni&gt;<br>
        #ElseIf ALTRA_ESPRESSIONE Then<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&lt;istruzioni&gt;<br>
        #Else<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&lt;istruzioni&gt;<br>
        #End If</blockquote>
      <p>In base al risultato dell'espressione valutata sar&agrave; incluso o 
        escluso il gruppo di istruzioni all'interno del controllo <b>#If</b>. 
        Se il risultato della prima espressione restituisce il valore Falso sar&agrave; 
        eseguito il controllo successivo <b>#ElseIf</b> oppure <b>#Else</b> (se 
        presenti).</p>
      <hr>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Passiamo ad un esempio pratico: possiamo aggiungere una serie di istruzioni 
        di controllo per effettuare il debug del codice, che saranno eseguite 
        soltanto quando la costante ISDEBUG &egrave; uguale a 1.</p>
      <ol class="codicevb">
        <li>#Const ISDEBUG = 1</li>
        <li> </li>
        <li>Private Sub Command1_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim sngProdotto As Single</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;sngProdotto = Text1.Text * Text2.Text / Text3.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#If ISDEBUG = 1 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox &quot;Text1 
          = &quot; &amp; Text1.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox &quot;Text2 
          = &quot; &amp; Text2.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox &quot;Text3 
          = &quot; &amp; Text3.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox &quot;sngProdotto 
          = &quot; &amp; sngProdotto</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#End If</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Risultato = sngProdotto</li>
        <li>End Sub</li>
      </ol>
      <p>Nel momento in cui il codice verr&agrave; compilato, se il valore della 
        costante ISDEBUG &egrave; 1 allora sar&agrave; incluso il gruppo di funzioni 
        MsgBox all'interno del controllo #If..#End If. In caso contrario le righe 
        6-11 saranno escluse dalla compilazione e non appariranno in alcun modo 
        nel file generato.<br>
        Questo comporta quindi un file eseguibile pi&ugrave; piccolo e ripulito 
        di istruzioni inutili nella versione definitiva.<br>
        In breve, se la costante ISDEBUG fosse stata diversa da 1, il codice risultante 
        sarebbe stato il seguente:</p>
      <ol class="codicevb">
        <li>Private Sub Command1_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim sngProdotto As Single</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;sngProdotto = Text1.Text * Text2.Text / Text3.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Risultato = sngProdotto</li>
        <li>End Sub</li>
      </ol>
      <p>Lo stesso progetto compilato con i due valori costanti produce infatti 
        due eseguibili nettamente differenti tra loro, il cui secondo &egrave; 
        pi&ugrave; piccolo dell'altro.</p>
      <hr>
      <p>Nell'esempio sopra citato non risalta la vera utilit&agrave; della compilazione 
        condizionale. Si provi per&ograve; a pensare ad un grosso gruppo di funzioni 
        comandate da un controllo #If. Altres&igrave; una prima versione del programma 
        eseguibile pu&ograve; includere una funzione API di una certa libreria, 
        mentre la seconda funzione pu&ograve; includerne un'altra di un'altra 
        libreria. Ad esempio:</p>
      <ol class="codicevb">
        <li>#Const WINNT = 1</li>
        <li></li>
        <li>#If WINNT = 1 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Private Declare Function ReleaseMemoryHeld 
          Lib &quot;MemWinNT.DLL&quot; (ByVal lpBlock As Long) As Long</li>
        <li>#Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Private Declare Function ReleaseMemoryHeld 
          Lib &quot;MemWin95.DLL&quot; (ByVal lpBlock As Long) As Long</li>
        <li>#End If</li>
      </ol>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>In funzione del valore della costante WINNT sar&agrave; compilato un 
        codice piuttosto che un altro. Il codice utilizzatore della funzione potr&agrave; 
        ad esempio non conoscere da quale libreria viene richiamata la funzione 
        ma utilizzer&agrave; semplicemente la funzione <i>ReleaseMemoryHeld</i>.</p>
      <p>Estendiamo ulteriormente il discorso: la versione per Windows NT ad esempio 
        potrebbe includere una, due o centinaia di funzioni e propriet&agrave; 
        che la versione per Windows 9x non &egrave; in grado di utilizzare. Naturalmente 
        nella versione compilata per Windows 9x tale codice non sar&agrave; affatto 
        presente ed il file eseguibile quindi risulter&agrave; pi&ugrave; ridotto.</p>
      <p>Per assurdo &egrave; addirittura possibile inserire del codice errato 
        all'interno di una parte compilata condizionalmente. Il seguente codice 
        ad esempio &egrave; formalmente valido:</p>
      <ol class="codicevb">
        <li>#Const WINNT = 1</li>
        <li></li>
        <li>#If WINNT = 1 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Private hThread As Long</li>
        <li>#Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Ambarab&agrave; cicc&igrave; cocc&ograve;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;A caval donato non si guarda in bocca</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Questo codice non sar&agrave; neanche compilato</li>
        <li>#End If</li>
      </ol>
      <p>Il segmento di codice alle righe 6-8 non sar&agrave; neanche compilato 
        e quindi non risulter&agrave; come errore durante l'esecuzione. All'interno 
        del progetto compilato non vi sar&agrave; alcuna traccia di quelle istruzioni.<br>
        Naturalmente se impostassimo il valore della costante WINNT ad un valore 
        diverso da 0 tali errori sarebbero segnalati e dall'altro lato, la variabile 
        hThread risulterebbe inesistente.</p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" -->Una reale applicazione della compilazione 
      condizionale &egrave; presente nell'articolo <a href="../cliserv/clser_08.htm">Creazione 
      di un gruppo di controlli Winsock in un modulo di classe</a> per permettere 
      in fase di compilazione la scelta di un <a href="../glossary/a.htm#ARRAY">array</a> 
      di oggetti oppure di un'<a href="../glossary/i.htm#ISTANZA">istanza</a> 
      Collection.<!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI </a><br>
        3 Dicembre 2002<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar2.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
