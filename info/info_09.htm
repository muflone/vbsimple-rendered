<html><!-- #BeginTemplate "/Templates/Info.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Informazioni aggiuntive sulle DLL e funzioni API</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo">Informazioni aggiuntive <!-- #BeginEditable "TITOLO" -->sulle 
    DLL e funzioni API<!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/infos.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"><script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" -->
      <p>Le DLL - Dynamic Library Linkage (<a href="../glossary/l.htm#LIBRERIA">Librerie</a> 
        a collegamento dinamico) - sono una tipologia di file ampiamente utilizzata 
        all'interno dei sistemi Windows, basti guardare il contenuto della cartella 
        <b><i>System</i></b> e <i><b>System32</b></i> di Windows.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Vengono in genere utilizzate per riporre funzioni che verranno utilizzate 
        da altri programmi tramite l'<a href="../glossary/a.htm#API">API</a> (Application 
        Programming Interface); ecco spiegato il collegamento dinamico. Infatti 
        il contenuto di una DLL rimane separato dal file di un programma; essa 
        viene collegata (<a href="../glossary/l.htm#LINKER">linkata</a>) al programma 
        che ne fa uso in <a href="../glossary/f.htm#FASEDIESECUZIONE">fase di 
        esecuzione</a>.<br>
        Si suddividono in tre grosse categorie:</p>
      <ol>
        <li>DLL Standard</li>
        <li>DLL <a href="../glossary/a.htm#ACTIVEX">ActiveX</a> e Estensioni Visual 
          Basic (<a href="../glossary/e.htm#ESTENSIONIVB">VBX</a>).<br>
          Vedi <a href="info_02.htm">Informazioni aggiuntive sugli ActiveX</a>.</li>
        <li>Driver normali (DRV) e di periferica virtuale (VXD)</li>
      </ol>
      <p>Le seconde sono caratterizzate da classi, facilmente istanziabili e riutilizzabili 
        all'interno di progetti Visual Basic. Non &egrave; possibile n&eacute; 
        creare n&eacute; utilizzare VBX all'interno di Visual Basic 5, mentre 
        era possibile farlo con le versioni precedenti.<br>
        Le ultime invece sono librerie con funzioni di basso livello o simulazione 
        di periferica.</p>
      <p>Le DLL Standard sono in genere scritte in linguaggio C e sono caratterizzate 
        dall'esportazione delle loro funzioni. Ci&ograve; vuol dire che una funzione, 
        se dichiarata esportabile, potr&agrave; essere richiamata attraverso l'API.</p>
      <p>Purtroppo, essendo scritte in un linguaggio diverso e pi&ugrave; raffinato 
        di Visual Basic &egrave; necessario conoscere i <a href="../glossary/p.htm#PROTOTIPO">prototipi</a> 
        della funzione, ovvero le dichiarazioni della funzione. La chiamata di 
        una funzione esterna tramite parametri errati, nella tipologia, contenuto 
        e numero pu&ograve; provocare un <a href="../glossary/g.htm#GENERALPROTECTIONFAULT">General 
        Protection Fault</a> oppure un blocco del computer.<br>
        In genere i prototipi di una DLL sono contenuti in un file header (intestazione) 
        con <a href="../glossary/e.htm#ESTENSIONEFILES">estensione</a> H distribuito 
        assieme al kit di programmazione (<a href="../glossary/s.htm#SDK">SDK</a> 
        - Source Development Kit) di tale libreria.</p>
      <p>Con l'<a href="../glossary/e.htm#EDIZIONI">edizione</a> Professional 
        o Enterprise di Visual Basic 5 &egrave; distribuito un programmino di 
        nome API Viewer (APILOAD.EXE) che contiene i prototipi di molte funzioni 
        API utilizzabili con Visual Basic. Esse riguardano le librerie tipiche 
        di Windows 95/98/ME, presenti nella stragrande maggioranza dei computer.<br>
        Un altro, ottimo, visualizzatore di dichiarazioni API &egrave; API-Guide 
        disponibile gratuitamente in rete all'indirizzo <a href="http://www.allapi.net" target="_blank">http://www.allapi.net</a>.<br>
        Inoltre, all'interno del CD di Visual Basic 5, &egrave; fornita anche 
        una serie di programmi dedicati alla lettura, investigazione e ricerca 
        delle dichiarazioni di DLL standard.</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Essendo, la maggior parte delle DLL, scritte in C, dove le stringhe sono 
        trattate come <a href="../glossary/p.htm#PUNTATORE">puntatori</a> di caratteri, 
        quando si accede a funzioni che manipolano stringhe, a volte &egrave; 
        necessario fornire un numero intero lungo (<i>Long</i>) al posto della 
        stringa. Per far questo &egrave; necessario utilizzare le funzioni di 
        conversione da variabile a puntatore (<i>VarPtr, StrPtr</i>). In ogni 
        caso le stinghe passate ad una funzione API dovrebbero terminare con un 
        carattere <a href="../glossary/n.htm#NULL">NULL</a>, poich&eacute; le 
        funzioni C manipolano i vettori (matrici) di caratteri e, secondo gli 
        schemi della programmazione in linguaggio C, tali vettori devono terminare 
        con un NULL.</p>
      <p>Altres&igrave; &egrave; importante, quando passiamo ad una funzione una 
        variabile stringa che funga da <a href="../glossary/b.htm#BUFFER">buffer</a>, 
        inizializzarla, ovvero prepararla mediante l'istruzione <i>Space$</i> 
        o <i>String$</i>, in modo da concedere alla funzione C uno spazio di memoria 
        gi&agrave; <a href="../glossary/a.htm#ALLOCARE">allocato</a>. Ove &egrave; 
        richiesta la dimensione del buffer &egrave; importante calcolare bene 
        lo spazio dichiarato. Ogni stringa in C &egrave; lunga tanti bytes per 
        quanti sono i caratteri che compongono la stringa nel formato ANSI, mentre 
        sono il doppio in formato UNICODE; in ogni caso c'&egrave; sempre un carattere 
        NULL finale da tenere in considerazione nel calcolo dell'ampiezza del 
        buffer.<br>
        Quasi sempre, sono previste due versioni della funzione che tratta stringhe: 
        una per ANSI ed una per UNICODE. Tipicamente il nome della funzione per 
        ANSI termina con un A finale, mentre il nome di quella per UNICODE termina 
        con W.<br>
        Ad esempio, all'interno della libreria KERNEL32.DLL abbiamo una funzione 
        di nome <i>CompareStringA</i> ed un'altra di nome <i>CompareStringW</i>; 
        naturalmente la prima gestisce stringhe ANSI e la seconda quelle UNICODE.</p>
      <p>Molte funzioni che richiedono il passaggio di un puntatore ad una stringa, 
        sebbene siano dichiarate con <i>ByVal</i> possono modificare il contenuto 
        stesso della stringa. Questo avviene perch&eacute; la chiamata mediante 
        <i>ByVal</i> effettua una copia del puntatore, ma non dell'area di memoria 
        puntata; questo fa s&igrave; che anche la copia del puntatore indichi 
        la medesima area di memoria. Qualche ulteriore informazione &egrave; presente 
        nella pagina <a href="info_05.htm">dedicata alle funzioni</a>.</p>
      <p>Altre volte, nella dichiarazione della funzione API, &egrave; presente 
        uno o pi&ugrave; parametri di nome <b>Reserved</b>. Ci&ograve; indica 
        che la funzione richiede necessariamente un puntatore (una variabile o 
        un numero costante trasformato in puntatore). Il valore di tale puntatore 
        pu&ograve; essere variato dalla funzione chiamata, ed in linea generale 
        &egrave; consigliabile inizializzare il puntatore a 0, prima di passarlo 
        alla funzione C.</p>
      <p>Mediante l'utilizzo di alcune funzioni API &egrave; possibile alterare 
        il comportamento di alcuni oggetti di un programma. Un'operazione tipica 
        - ma molto rischiosa - &egrave; il <a href="../glossary/s.htm#SUBCLASSING">subclassing</a> 
        di un form, ovvero l'intercettazione di <a href="../glossary/m.htm#MESSAGGIO">messaggi</a> 
        inviati ad una finestra. Queste operazioni si effettuano mediante la creazione 
        e comunicazione al sistema di una funzione di <i>callback</i> o di una 
        <i>Window Procedure</i>, che, collegata alla ricezione dei messaggi alla 
        finestra, ne anticipi l'esecuzione delle funzioni. Questo genere di operazione 
        &egrave; detta anche <a href="../glossary/h.htm#HOOKING"><i>hooking</i></a> 
        (agganciamento), da hook (uncino), poich&eacute; le Window Procedure o 
        funzioni di callback vengono agganciate alle funzioni che danno vita alle 
        finestre, ovvero a quelle funzioni che ricevono i messaggi.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Nota che quando parliamo di finestre nell'ambiente Windows, non intendiamo 
        soltanto i forms, ma anche tutti i controlli <a href="../glossary/t.htm#THUNDER">Thunder</a> 
        ed i <a href="../glossary/c.htm#CONTROLLO">controlli</a> aggiuntivi. Essi 
        infatti, costituiscono delle window, ognuna con il suo <a href="../glossary/h.htm#HANDLE">handle</a> 
        univoco.</p>
      <p>Prima di effettuare operazioni di questo genere &egrave; fondamentale 
        salvare il progetto, poich&eacute; una semplice variabile non inizializzata 
        nel modo corretto pu&ograve; trasformarsi in un <a href="../glossary/g.htm#GPF">GPF</a> 
        e quindi in un rischio di blocco dell'ambiente di Visual Basic. Inoltre, 
        in operazioni di subclassing &egrave; <i><b>assolutamente sconsigliata</b></i> 
        l'interruzione del programma mediante le funzioni dell'<a href="../glossary/i.htm#IDE">IDE</a> 
        o attraverso l'istruzione END. Ci&ograve; provocherebbe un'instabilit&agrave; 
        del sistema che si pu&ograve; facilmente tramutare in un obbligo di riavvio 
        della macchina. </p>
      <p>Morale della favola? <b>Prima di richiamare una funzione API <b class="sottolineato">salvare 
        sempre</b> il progetto</b>.</p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --><!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI </a><br>
        18 Dicembre 2000<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar2.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
