<html><!-- #BeginTemplate "/Templates/Info.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Informazioni aggiuntive sulle Funzioni</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo">Informazioni aggiuntive <!-- #BeginEditable "TITOLO" -->sulle 
    Funzioni <!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/infos.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"><script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" -->
      <p>In Visual Basic come in molti altri linguaggi esistono due genere di 
        routine: le <i><b>Sub</b></i> e le <i><b>Function</b></i>. Le prime sono 
        funzioni che non danno nessun valore di ritorno, mentre le Function permettono 
        di specificare un valore che sar&agrave; il risultato della chiamata alla 
        funzione.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>La sintassi di base delle funzioni &egrave;:</p>
      <blockquote> 
        <p>Sub NomeDellaSub(Parametro1, Parametro2, ....)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;Istruzioni...<br>
          End Sub<br>
          <br>
          Function NomeDellaFunction(Parametro1, ...) As TipoDati<br>
          &nbsp;&nbsp;&nbsp;&nbsp;Istruzioni...<br>
          &nbsp;&nbsp;&nbsp;&nbsp;NomeDellaFunction = Valore<br>
          End Function</p>
      </blockquote>
      <p>Ogni funzione pu&ograve; includere uno o pi&ugrave; parametri.<br>
        Se si dichiara un parametro ogni chiamata alla funzione dovr&agrave; includere 
        valori o variabili per tutti i parametri dichiarati nell'intestazione 
        della funzione.</p>
      <p>Per esempio se una funzione richiede tre parametri sar&agrave; necessario 
        passare per tutti e tre dei valori oppure delle variabili.</p>
      <p>La sintassi per ogni parametro &egrave;:</p>
      <blockquote> 
        <p>[<i>Optional</i>] [<i>ByVal | ByRef</i>] NomeParametro [<i>As TipoDati</i>]</p>
      </blockquote>
      <p>La parola chiave <i>Optional</i> definisce che il parametro &egrave; 
        opzionale, non obbligatorio. Se un parametro &egrave; opzionale sar&agrave; 
        possibile chiamare la funzione senza specificare nessun valore al suo 
        posto.</p>
      <p>TipoDati specifica un <a href="info_04.htm">tipo di dati</a> per il parametro. 
        In mancata specificazione del tipo dei dati sar&agrave; assunto il tipo 
        di dati Variant.</p>
      <p>Le parole chiave <i>ByVal</i> e <i>ByRef</i> definiscono il tipo di chiamata 
        per il parametro. ByVal indica una chiamata per valore, mentre ByRef indica 
        la chiamata per riferimento.<br>
        In una chiamata per valore viene creata una copia del valore specificato 
        nella chiamata e verr&agrave; utilizzata la copia all'interno della funzione; 
        ragion per cui ogni modifica al parametro non si riflette all'esterno 
        della funzione. Una chiamata per riferimento invece passa un <a href="../glossary/p.htm#PUNTATORE">puntatore</a> 
        all'interno della funzione. Ogni modifica al parametro avr&agrave; effetti 
        all'esterno della funzione.</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Supponiamo di avere questo segmento di codice:</p>
      <ol class="codicevb" start="1">
        <li>Sub CalcolaTriplo(ByVal Numero As Integer)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Numero = Numero * 3</li>
        <li>End Sub</li>
        <li></li>
        <li>...</li>
        <li>X = 5</li>
        <li>CalcolaTriplo X</li>
        <li>Print X</li>
      </ol>
      <p>L'ultima istruzione restituir&agrave; il valore 5 e non il valore 15 
        dato dal prodotto di 5 per 3. Il motivo &egrave; che il parametro Numero 
        &egrave; stato passato per valore. Alla chiamata della funzione viene 
        effettuata una copia in memoria del valore passato come parametro. Per 
        cui all'interno della funzione il calcolo del Numero * 3 lavora su una 
        copia del valore originale. All'uscita della funzione non rimarr&agrave; 
        nulla di tale operazione.</p>
      <p>Se invece il parametro Numero fosse stato dichiarato con ByRef il risultato 
        dell'operazione avrebbe dato il numero 15. Poich&eacute; quando un parametro 
        viene passato per riferimento ogni modifica fatta sul parametro si riflette 
        sul dato passato nella chiamata.</p>
      <p>Alternativamente avremmo potuto definire la stessa operazione con:</p>
      <ol class="codicevb" start="1">
        <li>Function CalcolaTriplo(ByVal Numero As Integer) As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;CalcolaTriplo = Numero * 3</li>
        <li>End Function</li>
        <li></li>
        <li>...</li>
        <li>X = 5</li>
        <li>X = CalcolaTriplo(X)</li>
        <li>Print X</li>
      </ol>
      <p>Il segmento appena visto stampa il risultato 15, poich&eacute; la funzione 
        CalcolaTriplo manda in uscita il prodotto di Numero per 3, pur lavorando 
        su un parametro chiamato per valore.</p>
      <p>Se una funzione, invece, riceve come parametro un oggetto caricato in 
        memoria, ad esempio un form, la funzione lavorer&agrave; con un puntatore 
        all'oggetto originale. In ogni caso, sia con <i>ByVal</i> sia con <i> 
        ByRef</i> l'oggetto sar&agrave; sempre l'originale.</p>
      <p>La spiegazione &egrave; molto semplice. Se dichiariamo un parametro con 
        <i>ByVal</i> e poi gli passiamo un oggetto, viene trasferita alla funzione, 
        una copia del puntatore - questa &egrave; la funzione di <i>ByVal</i> 
        - ma essa punter&agrave; alla medesima locazione di memoria del puntatore 
        originale.</p>
      <p>Questo &egrave; il funzionamento di base di tutte le funzioni API, dichiarate 
        tutte con <i>ByVal</i>.</p>
      <p>Tuttavia, nella creazione di una nuova funzione, &egrave; importante 
        non sottovalutare la possibilit&agrave; di utilizzare <i>ByRef</i> invece 
        che <i>ByVal</i>. Infatti, se la funzione in questione tratta stringhe, 
        il compilatore in caso di <i>ByVal</i> sar&agrave; costretto ad <a href="../glossary/a.htm#ALLOCARE">allocare</a> 
        un'area di memoria e copiarvi dentro la stringa con cui lavorare, con 
        un enorme spreco di tempo. Se si &egrave; assolutamente sicuri che la 
        funzione non andr&agrave; a toccare la stringa passata come parametro, 
        &egrave; consigliabile effettuare la chiamata mediante <i>ByRef</i>, poich&eacute; 
        sar&agrave; richiesta soltanto l'allocazione di un <a href="../glossary/p.htm#PUNTATORE">puntatore</a>, 
        senza che sia necessario ricopiare la stringa in questione.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Tale soluzione, purtroppo non funziona nel caso che la funzione riceva 
        come stringa una propriet&agrave; di qualche oggetto. Infatti le propriet&agrave;, 
        anche se passate con ByRef non riflettono i loro cambiamenti tra le chiamate 
        di funzione ed in ogni caso verr&agrave; creata una copia dei dati contenuti 
        in essa.</p>
      <p>Un ottimo esercizio su questi concetti &egrave; presente nell'<a href="../howto/ht_029.htm">HowTo 
        dedicato all'inversione di una stringa</a>.</p>
      <p>&Egrave; estremamente importante definire bene il tipo di chiamata da 
        effettuare: Sub o Function e parametri per valore o per riferimento. Entrambe 
        le scelte hanno vantaggi e svantaggi.</p>
      <p>Inoltre sia Sub che Function possono includere dei modificatori di accesso, 
        ovvero una parola chiave che pu&ograve; essere <i>Private</i> o <i>Public</i>. 
        Se una funzione viene definita con:</p>
      <blockquote> 
        <p>Private Sub NomeSub()</p>
      </blockquote>
      <p>Avremo una Sub di nome NomeSub, senza parametri richiesti. La parola 
        chiave Private indica che tale funzione non sar&agrave; accessibile in 
        altre parti del progetto se non quella dove la Sub &egrave; dichiarata. 
        Per esempio se avessimo un form di nome Form1 ed un'altro di nome Form2 
        e la dichiarazione appena vista fosse contenuta all'interno di Form1, 
        il secondo form non potrebbe in nessun modo accedere e sfruttare la Sub 
        dichiarata come Private.</p>
      <p>Invece se la Sub fosse stata dichiarata con Public, qualunque segmento 
        di codice all'interno del progetto avrebbe potuto utilizzare la Sub con 
        una chiamata Form1.NomeSub.</p>
      <p>I modificatori di accesso trovano nascita nella <a href="../glossary/p.htm#PROGRAMMAZIONEADOGGETTI">programmazione 
        ad oggetti</a> e stanno alla base dell'information hiding, ovvero il non 
        esporre quei dati che dirigono situazioni specifiche interne ad una classe.</p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --><!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI </a><br>
        14 Novembre 2000<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar2.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
