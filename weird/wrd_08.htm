<html><!-- #BeginTemplate "/Templates/Weird.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Sincrono o asincrono?</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo"><!-- #BeginEditable "TITOLO" -->Sincrono o asincrono?<!-- #EndEditable --> 
    <!-- #BeginEditable "API" --><img src="../images/api.gif" width="34" height="24" align="absmiddle"><!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/weird.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"> 
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><!-- #BeginEditable "DIFFICOLTA" --><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"> 
        2<!-- #EndEditable --> / 5</p>
      <script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" --> 
      <p>&Egrave; risaputo che l'esecuzione di un'attivit&agrave; all'interno 
        di un processo pu&ograve; essere <a href="../glossary/s.htm#SINCRONO"><b>sincrona</b></a>, 
        cio&egrave; l'esecuzione del codice successivo alla chiamata verr&agrave; 
        eseguito soltanto quando la chiamata terminer&agrave; la sua attivit&agrave; 
        e restituir&agrave; il controllo al chiamante, oppure <a href="../glossary/a.htm#ASINCRONO"><b>asincrona</b></a>, 
        cio&egrave; le due attivit&agrave; proseguono indisturbate ed il chiamante 
        non deve attendere la fine dell'attivit&agrave; del codice richiamato.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Quasi tutte le funzioni di Visual Basic sono sincrone e pertanto &egrave; 
        possibile avere un certo grado di sicurezza; ad esempio la richiesta di 
        creare una cartella con <i>MkDir</i> ci offre una certa sicurezza che 
        al momento in cui verr&agrave; eseguita la riga successiva, salvo errori, 
        la cartella sar&agrave; gi&agrave; stata creata. Infatti la chiamata alla 
        funzione genera una chiamata ad un'altra funzione del sistema operativo, 
        questo creer&agrave; la cartella alla posizione specificata e la funzione 
        ritorner&agrave; al programma chiamante. Il codice successivo potr&agrave; 
        tranquillamente utilizzare la suddetta cartella e non attendere che il 
        sistema operativo la crei. Se per assurdo la creazione della cartella 
        richiedesse un'ora di tempo il codice successivo alla funzione <i>MkDir</i> 
        non sar&agrave; eseguito fino a quando la cartella non sar&agrave; creata 
        ovvero dovr&agrave; attendere almeno un'ora.</p>
      <p>Un esempio di funzione asincrona invece &egrave; <i>Shell</i> che lancia 
        l'<a href="../activity/act_12.htm">esecuzione di un processo esterno</a> 
        e ritorna immediatamente, il processo esterno si avvia e funziona in contemporanea 
        al programma VB che l'ha richiamato. Il codice successivo alla funzione 
        Shell sar&agrave; richiamato subito dopo la chiamata alla suddetta funzione, 
        senza che sia necessario attendere la chiusura del processo esterno pertanto 
        non si dovranno assumere posizioni certe su quel processo in esecuzione, 
        dato che al momento del controllo potrebbe non essersi ancora avviato 
        oppure potrebbe essere stato chiuso.</p>
      <p>Durante l'attivit&agrave; di codice sincrono non si verificano tutti 
        gli eventi che normalmente si generano e solitamente l'interfaccia grafica 
        si blocca e lo schermo non viene neanche ridisegnato. &Egrave; possibile 
        provare questo con un semplice ciclo che duri un paio di secondi. Per 
        tutto quel tempo non sar&agrave; possibile spostare il form, n&egrave; 
        cliccare sui controlli in esso contenuti. Al termine del ciclo scatteranno 
        tutti gli eventi in sospeso. Una deroga a questo comportamento &egrave; 
        dato dalla funzione <i><b>DoEvents</b></i> che forza l'esecuzione degli 
        eventi in sospeso, arrestando l'attivit&agrave; al punto in cui si trova 
        la chiamata alla funzione e lasciando spazio agli eventi in sospeso. Al 
        termine dell'attivit&agrave; di tutti gli eventi in sospeso l'esecuzione 
        del codice interrotto riprender&agrave; normalmente. Per questa ragione 
        la presenza di una funzione <i>DoEvents</i> all'interno di un ciclo lungo 
        ne rallenta molto l'esecuzione, anche solo per ridisegnare lo schermo 
        (attivit&agrave; questa molto lunga).</p>
      <p>Questo &egrave; il comportamento normale di tutte le funzioni VB; essere 
        sincrone o asincrone. In questo articolo invece si metter&agrave; <a href="wrd_06.htm">nuovamente</a> 
        in analisi la funzione <i><b>SHFileOperation</b></i> che richiama le operazioni 
        standard sui files, quali la copia, lo spostamento e la cancellazione, 
        utilizzando l'interfaccia grafica che verrebbe mostrata se l'operazione 
        venisse svolta da un operatore, ovvero sar&agrave; visualizzata la finestra 
        con i foglietti svolazzanti, la barra di avanzamento ed il pulsante di 
        annullamento come mostrato nella <b><i>Figura 1</i></b>.</p>
      <p align="center"><img src="../images/weird/weird08_01.png" width="314" height="130" alt="Figura 1"><br>
        <b>Figura 1</b></p>
      <p>La funzione <b>SHFileOperation</b> si comporta in una maniera davvero 
        strana: la sua attivit&agrave; non &egrave; definibile n&egrave; sincrona 
        n&eacute; asincrona in quanto racchiude le caratteristiche di entrambe 
        le modalit&agrave;. Vediamo subito il progetto in analisi.</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p><img src="../images/weird/weird08_02.png" width="219" height="149" align="right" alt="Figura 2">Utilizzeremo 
        un unico form con quattro semplici controlli: una <b><i>DirListBox</i></b> 
        <img src="../images/controls/dirlistbox.gif" width="25" height="25" align="absmiddle">e 
        tre <i><b>CommandButton</b></i> <img src="../images/controls/commandbutton.gif" width="25" height="25" align="absmiddle">dai 
        rispettivi nomi <b>dirCartelle</b>, <b>cmdCreaA</b>, <b>cmdEliminaA</b> 
        e <b>cmdCopiaProg</b>. Prima di vedere l'attivit&agrave; dei vari controlli 
        inseriremo le solite dichiarazioni di costanti, funzioni e tipi utilizzati 
        dall'API.</p>
      <ol start="1" class="codicevb">
        <li>Option Explicit</li>
        <li></li>
        <li>Private Const FO_COPY As Long = &amp;H2</li>
        <li>Private Const FO_DELETE As Long = &amp;H3</li>
        <li>Private Const FOF_ALLOWUNDO As Long = &amp;H40</li>
        <li></li>
        <li>Private Declare Function SHFileOperation Lib &quot;shell32.dll&quot; 
          Alias &quot;SHFileOperationA&quot; (lpFileOp As SHFILEOPSTRUCT) As Long</li>
        <li></li>
        <li>Private Type SHFILEOPSTRUCT</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;hwnd As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;wFunc As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;pFrom As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;pTo As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;fFlags As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;fAnyOperationsAborted As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;hNameMappings As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;lpszProgressTitle As String</li>
        <li>End Type</li>
        <li></li>
        <li>Private Sub Form_Load()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;dirCartelle.Path = &quot;C:\&quot;</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p><!-- #BeginLibraryItem "/Library/Notes2.lbi" --><img src="../images/notes2.gif" width="31" height="32" align="left"><!-- #EndLibraryItem -->Porre 
        particolare attenzione alla struttura SHFILEOPSTRUCT poich&eacute; molti 
        articoli sul Web sono basati su una specifica errata e solo in seguito 
        corretta da Microsoft. Vedi l'articolo <a href="wrd_06.htm">Si, no, forse...</a> 
        in questa stessa sezione.</p>
      <p>Le tre costanti dichiarate in cima serviranno a specificare alla funzione 
        SHFileOperation cosa eseguire: una copia o una cancellazione e se spostare 
        nel cestino durante la cancellazione.</p>
      <p>La funzione dei tre pulsanti sul form &egrave; davvero molto semplice:</p>
      <ol start="24" class="codicevb">
        <li>Private Sub cmdCreaA_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;On Error Resume Next</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;MkDir &quot;C:\a&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;dirCartelle.Refresh</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p>Il primo semplicemente creer&agrave; la cartella C:\A e quindi aggiorner&agrave; 
        il contenuto dell'elenco <b>dirCartelle</b>. L'istruzione On Error Resume 
        Next &egrave; stata aggiunta solo per semplificare il problema nel caso 
        in cui la cartella esistesse gi&agrave;.</p>
      <ol start="30" class="codicevb">
        <li>Private Sub cmdEliminaA_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim FileOperation As SHFILEOPSTRUCT</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim lReturn As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;With FileOperation</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.wFunc = FO_DELETE</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.pFrom = &quot;C:\a&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.fFlags = FOF_ALLOWUNDO</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End With</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;lReturn = SHFileOperation(FileOperation)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;MsgBox &quot;Completato&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;dirCartelle.Refresh</li>
        <li>End Sub</li>
        <li> </li>
      </ol>
      <p>Il secondo pulsante eliminer&agrave; la cartella C:\A spostandola nel 
        cestino (<i><b>FOF_ALLOWUNDO</b></i>) ed al termine dell'operazione mostrer&agrave; 
        un avviso di completamento ed aggiorner&agrave; l'elenco <b>dirCartelle</b>.</p>
      <ol start="43" class="codicevb">
        <li>Private Sub cmdCopiaProg_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim FileOperation As SHFILEOPSTRUCT</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim lReturn As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;With FileOperation</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.wFunc = FO_COPY</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.pFrom = &quot;C:\Programmi&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.pTo = &quot;C:\a&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.fFlags = FOF_ALLOWUNDO</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End With</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;lReturn = SHFileOperation(FileOperation)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;MsgBox &quot;Completatato&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;dirCartelle.Refresh</li>
        <li>End Sub</li>
      </ol>
      <p>Il terzo pulsante, molto similare al secondo, copier&agrave; la cartella 
        C:\Programmi in C:\A e come in precedenza, al termine dell'operazione 
        mostrer&agrave; un avviso di completamento ed aggiorner&agrave; l'elenco 
        <b>dirCartelle</b>.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Secondo quanto detto in precedenza la funzione <i>SHFileOperation</i> 
        pu&ograve; definirsi (almeno in prima analisi) sincrona; infatti l'avviso 
        di completamento non verr&agrave; eseguito fino a quando la funzione non 
        ritorner&agrave; al programma che l'ha chiamata, ovvero fino a quando 
        non avr&agrave; completato l'operazione. Possiamo semplicemente dimostrarlo 
        lanciando il programma, creando la cartella con il primo dei tre pulsanti 
        e cancellarla con il secondo.</p>
      <p>Sar&agrave; mostrata la richiesta come nella <i><b>Figura 3</b></i> e 
        solo dopo aver risposto SI alla domanda la cartella verr&agrave; cancellata 
        e l'avviso di completamento sar&agrave; mostrato.</p>
      <table width="70%" border="0" cellspacing="2" cellpadding="0" align="center">
        <tr> 
          <td width="70%" align="center" valign="bottom"><img src="../images/weird/weird08_03.png" width="335" height="119" alt="Figura 3"><br>
            <b>Figura 3</b></td>
          <td align="center" valign="bottom" width="30%"><img src="../images/weird/weird08_04.png" width="83" height="80" alt="Figura 4"><br>
            <b>Figura 4</b></td>
        </tr>
      </table>
      <p>Il fatto che l'avviso della <i><b>Figura 4</b></i> non venga mostrato 
        fino a quando l'attivit&agrave; della funzione <i>SHFileOperation</i> 
        non viene completata dimostra che la funzione &egrave; sincrona, cio&egrave; 
        arresta il codice che l'ha chiamata fino a quando non termina la sua attivit&agrave;.</p>
      <p>&Egrave; possibile provare la stessa operazione cliccando sul terzo pulsante 
        <i> <b>&quot;Copia Programmi&quot;</b></i>; anche in questo caso la funzione 
        si comporta in maniera modale. Per tutta la durata dell'operazione la 
        routine che ha chiamato la funzione &egrave; sospesa e la finestra di 
        completamento non verr&agrave; mostrata. Solo al termine dell'operazione 
        oppure all'interruzione da parte dell'utente cliccando sul pulsante Annulla 
        il codice proseguir&agrave; da dove era stato interrotto. Questa &egrave; 
        il normale funzionamento delle funzioni sincrone.</p>
      <p>Tuttavia la funzione nasconde un problema di non poco conto: proviamo 
        a lanciare l'operazione di copia mediante il terzo pulsante e durante 
        la sua attivit&agrave; (&egrave; stata scelta la cartella programmi perch&eacute; 
        la durata dell'operazione &egrave; abbastanza lunga), cio&egrave; mentre 
        &egrave; mostrata la finestra di avanzamento, possiamo cliccare sulla 
        finestra del nostro progetto e trovarla completamente funzionante. Possiamo 
        spostarla, chiuderla, cliccare sui pulsanti e persino sul terzo pulsante, 
        cio&egrave; quello che ha richiamato la funzione di copia, ancora in corso.</p>
      <p align="center"><img src="../images/weird/weird08_05.png" width="344" height="182" alt="Figura 5"><br>
        <b>Figura 5</b></p>
      <p>Questo &egrave; invece il tipico funzionamento delle funzioni asincrone, 
        che lasciano il controllo al programma chiamante anche durante la loro 
        attivit&agrave;. Questo genere di comportamento pu&ograve; condurre a 
        parecchi errori poich&eacute; l'attivit&agrave; della funzione di copia 
        non &egrave; stata ancora completata ma &egrave; comunque possibile tentare 
        la cancellazione della cartella.</p>
      <p>Ma come abbiamo gi&agrave; visto la funzione non &egrave; asincrona; 
        infatti al termine oppure all'interruzione mediante il pulsante Annulla, 
        sar&agrave; eseguito il codice successivo alla chiamata della funzione 
        e quindi verr&agrave; mostrato l'avviso di completamento.</p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --> 
      <p>Dovendo dare una spiegazione di questo particolare comportamento della 
        funzione <i>SHFileOperation</i> si pu&ograve; dire che all'interno del 
        ciclo di copiatura &egrave; presente una chiamata ad una funzione analoga 
        a <i>DoEvents</i>, che consenta l'esecuzione degli eventi pendenti, dal 
        semplice aggiornamento grafico della finestra al completo funzionamento 
        degli altri controlli sullo schermo.</p>
      <!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI</a><br>
        15 Febbraio 2004<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><a href="index.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna all'indice delle Stranezze</a></td>
    <td align="right">&nbsp;</td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
