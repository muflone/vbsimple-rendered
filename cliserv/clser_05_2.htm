<html><!-- #BeginTemplate "/Templates/ClientServer.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Visualizza il contenuto delle cartelle remote tramite due programmi Client/Server (seconda parte)</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo"><!-- #BeginEditable "TITOLO" -->Visualizza il contenuto 
    delle cartelle remote tramite due programmi Client/Server (seconda&nbsp;parte)<!-- #EndEditable --> 
    <!-- #BeginEditable "API" --><!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/cliserv.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
  </div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"> 
      <table width="100%"><tr><td align="left" nowrap><style type="text/css">
@import url(http://www.google.com/cse/api/branding.css);
</style>
<div class="cse-branding-right" style="background-color:#FFFFFF;color:#000000">
  <div class="cse-branding-form">
    <form action="http://www.google.it/cse" id="cse-search-box">
      <div>
        <input type="hidden" name="cx" value="partner-pub-8218922773694577:rv2o52-qh5a" />
        <input type="hidden" name="ie" value="ISO-8859-1" />
        <input type="text" name="q" size="20" />
        <input type="submit" name="sa" value="Cerca" />
      </div>
    </form>
  </div>
  <div class="cse-branding-logo">
    <img src="http://www.google.com/images/poweredby_transparent/poweredby_FFFFFF.gif" alt="Google" />
  </div>
  <div class="cse-branding-text">
    Ricerca personalizzata
  </div>
</div></td><td align="right">
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><!-- #BeginEditable "DIFFICOLTA" --><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level3.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level4.gif" width="17" height="18" align="absmiddle"> 
        4<!-- #EndEditable --> / 5</p>
</td></tr></table>
      <script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" -->
<p align="center"><a href="clser_05.htm">&lt;&lt; Continua dalla parte 1</a></p>
      <p align="left">In questa seconda parte vedremo come sviluppare il programma 
        client che riceve i dati dal programma server visto nella prima parte.</p>
      <p align="left">Mentre la parte server conteneva molto codice e pochi elementi 
        grafici, la parte server contiene pi&ugrave; controlli sul form e poche 
        righe di codice.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p align="left">Le uniche funzioni che il client deve effettuare sono la 
        connessione al computer remoto Server alla porta 1500, la richiesta della 
        struttura directory e la sua visualizzazione.</p>
      <p align="left"><img src="../images/cliserv/cliserv005_02.jpg" width="264" height="161" alt="Figura 1" align="right">Disponiamo 
        sul nostro form <b>CientForm</b> una label la cui <i>Caption</i> sia &quot;Indirizzo 
        host&quot; e alla destra di questa inseriamo una TextBox di nome <b>HostName</b>.<br>
        Inseriamo anche due pulsanti standard di nome e Caption <b>Connetti</b> 
        e <b>Disconnetti</b>.</p>
      <p align="left">Inseriamo ovviamente un controllo Winsock di nome <b>Client</b>. 
        A causa di uno strano <a href="../glossary/b.htm#BUG">bug</a> del Winsock 
        &egrave; necessario creare una matrice di controlli per evitare errori. 
        Per cui impostiamo anche la propriet&agrave; <i>Index</i> di questo controllo 
        a 0.</p>
      <p align="left">Per dare un tocco grafico abbiamo inserito anche un frame 
        la cui <i>Caption</i> &egrave; &quot;<b>Elenca files e cartelle</b>&quot;.<br>
        Inseriamo all'interno del frame una matrice di OptionButton formata da 
        3 elementi. Denominiamo la matrice <b>SceltaDIR</b> ed associamo ai singoli 
        pulsanti le propriet&agrave; <i>Index</i> a 0 a 1 e a 2. Il primo pulsante 
        di opzione conterr&agrave; il testo &quot;<b>Solo files</b>&quot;, il 
        secondo conterr&agrave; &quot;<b>Solo cartelle</b>&quot;, mentre il terzo 
        avr&agrave; come Caption &quot;<b>Tutto</b>&quot;.<br>
        Impostiamo anche la propriet&agrave; <i>Value</i> del terzo pulsante a 
        True.</p>
      <p align="left">Sotto questi inseriamo un pulsante di comando di nome <b>AggiornaButton</b> 
        la cui Caption sar&agrave; &quot;<b>Aggiorna</b>&quot;. Nel momento in 
        cui l'utente premer&agrave; questo verr&agrave; tentata la scansione del 
        disco remoto in base ai pulsanti di opzione sopra.</p>
      <p align="left">Per ultimo elemento inseriamo una ListBox di nome <b>ElencoFiles</b>. 
        Per semplificare un po' il tutto impostiamo la propriet&agrave; <i>Sorted</i> 
        di essa a True. Cos&igrave; facendo, tutti gli elementi che verranno inseriti 
        dentro essa saranno ordinati alfabeticamente.</p>
      <p align="left">La parte estetica del form &egrave; terminata.<br>
        Il funzionamento &egrave; molto semplice: l'utente immette l'indirizzo 
        del computer a cui connettersi nella TextBox in alto, preme il pulsante 
        Connetti e viene connesso al computer remoto. Per ottenere la struttura 
        del disco remoto baster&agrave; scegliere la modalit&agrave; di elencazione 
        attraverso i pulsanti di opzione e premere il pulsante Aggiorna. Gli elementi 
        verranno inseriti nella ListBox a fianco.</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p align="left">Prima di passare al codice &egrave; bene definire meglio 
        il bug del controllo Winsock accennato prima. Dopo che ci si &egrave; 
        collegati ad un indirizzo, ci si scollega e si ritenta la connessione, 
        il controllo Winsock riporta un errore di runtime &quot;<i>Indirizzo gi&agrave; 
        in uso</i>&quot; sebbene la connessione precedente fosse stata chiusa 
        attraverso il metodo Close, via Client e via Server.<br>
        La soluzione pi&ugrave; praticata consiste nel creare una matrice di controlli 
        in <a href="../glossary/f.htm#FASEDIPROGETTAZIONE">fase di progettazione</a> 
        con un solo elemento. A <a href="../glossary/r.htm#RUNTIME">runtime</a>, 
        si alloca un secondo elemento di questa matrice; ad ogni tentativo di 
        collegamento si dealloca l'elemento precedentemente allocato e lo si rialloca 
        nuovamente. La deallocazione fa s&igrave; che il controllo Winsock <i>dimentichi</i> 
        la precedente connessione, permettendo il normale collegamento.<br>
        Per una spiegazione su questo bug, consultare la sezione dedicata all'<a
        href="clser_00.htm#STEP4">utilizzo di NETSTAT</a>.</p>
      <p align="left">Passiamo ora al codice:</p>
      <ol class="codicevb" start="1">
        <li>Option Explicit</li>
        <li>Private ELENCADIR As Boolean</li>
      </ol>
      <p>Dichiariamo una variabile di nome <b>ELENCADIR</b>. Essa servir&agrave; 
        da segnale nel momento in cui riceveremo l'elenco dal server.</p>
      <ol class="codicevb" start="4">
        <li>Private Sub Form_Load()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Load Client(1)</li>
        <li>End Sub</li>
      </ol>
      <p>All'avvio del programma allochiamo una nuova istanza del Winsock per 
        risolvere il problema dell'indirizzo in uso.</p>
      <ol class="codicevb" start="8">
        <li>Private Sub Connetti_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Trim(HostName.Text) = &quot;&quot; Then 
          Exit Sub</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Unload Client(1)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Load Client(1)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Client(1).Connect Trim(HostName.Text), 1500</li>
        <li>End Sub</li>
      </ol>
      <p>Quando l'utente preme il pulsante <b>Connetti</b>, innanzitutto viene 
        controllato se il campo HostName contiene qualcosa. Se &egrave; vuoto 
        non tenta nemmeno la connessione.</p>
      <p>Supponiamo che il campo HostName contenga un indirizzo valido.<br>
        Prima di effettuare la connessione viene deallocato e riallocato l'<a href="../glossary/i.htm#ISTANZA">istanza</a> 
        di Winsock per il bug gi&agrave; accennato prima.<br>
        Fatto questo si tenta la connessione all'host indicato dalla casella di 
        testo, con porta 1500.</p>
      <ol class="codicevb" start="15">
        <li>Private Sub Disconnetti_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Client(1).Close</li>
        <li>End Sub</li>
      </ol>
      <p>Nel momento in cui l'utente preme il pulsante <b>Disconnetti</b> viene 
        chiusa la connessione via client.</p>
      <ol class="codicevb" start="19">
        <li>Private Sub AggiornaButton_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Client(1).State &lt;&gt; sckConnected Then 
          Exit Sub</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;ELENCADIR = True</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If SceltaDIR(0).Value Then Client(1).SendData 
          &quot;DIRF&quot; &amp; vbNewLine</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If SceltaDIR(1).Value Then Client(1).SendData 
          &quot;DIRS&quot; &amp; vbNewLine</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If SceltaDIR(2).Value Then Client(1).SendData 
          &quot;DIR&quot; &amp; vbNewLine</li>
        <li>End Sub</li>
      </ol>
      <p>Questo &egrave; l'evento <i>Click</i> del pulsante <b>AggiornaButton</b>. 
        Quando l'evento scatta, viene controllato se la connessione &egrave; stabilita, 
        mediante la propriet&agrave; <i>State</i> del controllo Client. Se la 
        connessione non &egrave; avvenuta, esce immediatamente dalla funzione 
        senza far nulla.</p>
      <p>Se la connessione &egrave; stabilita, imposta il flag <b>ELENCADIR</b>, 
        indicando che i prossimi dati che arriveranno al controllo Client, saranno 
        i dati della struttura della cartella remota.</p>
      <p>Dopodich&egrave; segue il controllo del pulsante di opzione premuto.<br>
        Sul server sono presenti tre comandi di scansione: DIRF che recupera soltanto 
        i files, DIRS che recupera soltanto le sottocartelle e DIR che recupera 
        tutto dalla cartella di lavoro.</p>
      <p>A seconda del pulsante di opzione scelto viene eseguito il comando corrispondente.</p>
      <ol class="codicevb" start="27">
        <li>Private Sub Client_DataArrival(Index As Integer, ByVal bytesTotal 
          As Long)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim DATI As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Client(1).GetData DATI, vbString, bytesTotal</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If ELENCADIR = True Then PreparaElenco DATI</li>
        <li>End Sub</li>
      </ol>
      <p>L'evento <i>DataArrival</i> scatta nel momento in cui vengono inviati 
        dati dal server verso il client.<br>
        Alla riga 28 viene dichiarata una variabile temporanea che ricever&agrave; 
        i dati dal server tramite la riga successiva.<br>
        La riga 30 controlla se lo stato di <b>ELENCADIR</b> &egrave; True (ricordiamo 
        che ELENCADIR viene impostato a True nel momento in cui viene premuto 
        il pulsante Aggiorna, indicando che i dati che arriveranno saranno la 
        struttura della cartella). In caso di controllo positivo esegue la funzione 
        PreparaElenco passandogli come parametro i dati ricevuti dal server.</p>
      <ol class="codicevb" start="33">
        <li>Private Sub ElencoFiles_DblClick()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Client(1).SendData &quot;CD &quot; &amp; ElencoFiles.Text 
          &amp; vbNewLine</li>
        <li>End Sub</li>
      </ol>
      <p>Nel momento in cui l'utente clicca due volte sull'elenco dei files viene 
        inviato al server il comando CD che indica il cambio della cartella attiva.</p>
      <ol class="codicevb" start="37">
        <li>Private Sub PreparaElenco(ByVal Elenco As String)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim INVIO As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;ELENCADIR = False</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;ElencoFiles.Clear</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Elenco = Mid(Elenco, InStr(1, Elenco, vbNewLine))</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;INVIO = InStr(1, Elenco, vbNewLine)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If InStr(INVIO + 1, Elenco, vbNewLine) &lt; 
          1 Then INVIO = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;While INVIO &lt;&gt; 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElencoFiles.AddItem 
          Mid(Elenco, INVIO + 2, InStr(INVIO + 1, Elenco, vbNewLine) - INVIO - 
          2)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INVIO = InStr(INVIO 
          + 1, Elenco, vbNewLine)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If InStr(INVIO + 1, 
          Elenco, vbNewLine) &lt; 1 Then INVIO1 = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Wend</li>
        <li>End Sub</li>
      </ol>
      <p>L'ultima funzione di questo programma &egrave; la PreparaElenco che legge 
        la stringa ricevuta dal server ed inserisce gli elementi all'interno dell'elenco 
        dei files.</p>
      <p>Per prevenzione azzera subito il flag ELENCADIR. Azzera anche la ListBox 
        <b>ElencoFiles</b>.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Prima di iniziare a lavorare elimina l'intestazione del pacchetto, ovvero 
        la &quot; +OK:&quot;, andando a cercarsi il primo INVIO (vbNewLine) dentro 
        esso (riga 41).</p>
      <p>Alla riga successiva memorizza la posizione del prossimo INVIO dentro 
        la variabile <b>INVIO</b>.</p>
      <p>La riga 43 &egrave; un controllo d'obbligo: se ci troviamo davanti ad 
        un elenco vuoto, per esempio un'elenco di files di una cartella vuota. 
        Per capire questo verifica se esiste un altro INVIO dopo quello indicato 
        dalla variabile <b>INVIO</b>. Se non riesce a trovarlo, imposta quest'ultima 
        a 0, forzando l'uscita del ciclo alla prossima riga.</p>
      <p>La riga 44 inizia un ciclo che dura fintanto che la variabile <b>INVIO</b> 
        conterr&agrave; un numero diverso da 0, ovvero fintanto che ci saranno 
        caratteri di INVIO nell'elenco, quindi fintanto che ci saranno altri files 
        o cartelle.</p>
      <p>Questo ciclo contiene 3 istruzioni:<br>
        la prima estrae un elemento dall'elenco e lo inserisce all'interno di 
        <b>ElencoFiles</b>;<br>
        la seconda aggiorna la posizione di <b>INVIO</b>, andandosi a cercare 
        l'INVIO successivo all'elemento appena estratto;<br>
        la riga 47 effettua un'ultimo controllo: se non vi sono altri segni di 
        INVIO, imposta la variabile <b>INVIO</b> a 0, per forzare l'uscita dal 
        ciclo.<br>
        <br>
      </p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --> 
      <p align="left">Il programma Client termina qui.<br>
        Quando lo si prova su connessioni Dial-Up con modem o su reti particolarmente 
        lente, si raccomanda di non aver troppa fretta a premere un pulsante di 
        seguito all'altro.<br>
        Infatti il programma non effettua nessun controllo se i dati sono arrivati 
        correttamente al server.<br>
        &Egrave; lo stesso motivo per il quale abbiamo evitato l'auto-aggiornamento 
        della lista quando si effettua il cambio di cartella tramite doppio click.</p>
      <p align="left"><br>
        <img src="../images/cliserv/cliserv005_03.jpg" width="264" height="161" align="right" alt="Figura 2">Il 
        codice &egrave; tutto da ottimizzare e da controllare, ma come esempio 
        di base dovrebbe andare. &Egrave; stato provato su una LAN a 10 MBit/s 
        e non ha presentato nessuna difficolt&agrave;.</p>
      <p align="left">Lo sviluppo di architetture <a href="../glossary/c.htm#CLIENTSERVER">Client/Server</a> 
        presenta sempre numerosi rischi, e tra i principali spicca la perdita 
        di un pacchetto durante il tragitto.<br>
        Il server per ogni richiesta ricevuta manda indietro una piccola intestazione 
        indicante la correttezza dell'ultimo comando. Si consiglia di sfruttare 
        le intestazioni per controllare il corretto scambio dei dati tra client 
        e server.</p>
      <p>&nbsp;</p>
      <!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI</a><br>
        4 Giugno 2001<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><a href="index.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna all'indice Client/Server</a></td>
    <td align="right">&nbsp;</td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
