<html><!-- #BeginTemplate "/Templates/ClientServer.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Creazione di un gruppo di controlli Winsock in un modulo di classe</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo"><!-- #BeginEditable "TITOLO" -->Creazione di un gruppo di 
    controlli Winsock<br>
    in un modulo di classe <!-- #EndEditable --> 
    <!-- #BeginEditable "API" --><!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/cliserv.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
  </div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"> 
      <table width="100%"><tr><td align="left" nowrap><style type="text/css">
@import url(http://www.google.com/cse/api/branding.css);
</style>
<div class="cse-branding-right" style="background-color:#FFFFFF;color:#000000">
  <div class="cse-branding-form">
    <form action="http://www.google.it/cse" id="cse-search-box">
      <div>
        <input type="hidden" name="cx" value="partner-pub-8218922773694577:rv2o52-qh5a" />
        <input type="hidden" name="ie" value="ISO-8859-1" />
        <input type="text" name="q" size="20" />
        <input type="submit" name="sa" value="Cerca" />
      </div>
    </form>
  </div>
  <div class="cse-branding-logo">
    <img src="http://www.google.com/images/poweredby_transparent/poweredby_FFFFFF.gif" alt="Google" />
  </div>
  <div class="cse-branding-text">
    Ricerca personalizzata
  </div>
</div></td><td align="right">
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><!-- #BeginEditable "DIFFICOLTA" --><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level3.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level4.gif" width="17" height="18" align="absmiddle"> 
        4<!-- #EndEditable --> / 5</p>
</td></tr></table>
      <script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" --> 
      <p>L'articolo prende spunto da quello dedicato alla <a href="clser_07.htm">creazione 
        di un singolo controllo Winsock in un modulo di classe</a> ed implementa 
        una soluzione basata sull'uso di due classi <img src="../images/ide/classe.gif" width="16" height="16" align="absmiddle"> 
        collegate: la prima servir&agrave; per allocare un singolo controllo e 
        la seconda raggruppa i vari controlli e ne gestisce gli eventi.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>All'interno della classe il gruppo di controlli pu&ograve; essere gestito 
        mediante un <a href="../glossary/a.htm#ARRAY">array</a> oppure mediante 
        una Collection. L'uso della prima soluzione piuttosto che della seconda 
        &egrave; determinato da una costante di compilazione condizionale. Vedi 
        le <a href="../info/info_18.htm">Informazioni aggiuntive sulla compilazione 
        condizionale</a>.</p>
      <p>Sebbene le due classi siano inscindibili ed interdipendenti l'una dall'altra 
        cominceremo a vedere il codice della prima classe: <b><i>clsFBIOnClassSocketSingle</i></b>:</p>
      <ol start="1" class="codicevb">
        <li>Option Explicit</li>
        <li></li>
        <li>Private WithEvents m_Socket As Winsock</li>
        <li>Private m_Parent As clsFBIOnClassSocketGroup</li>
        <li>Private m_InGroupIndex As Integer</li>
        <li></li>
        <li>Private Enum WinsockEvents</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_Close = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_Connect = 1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_ConnectionRequest = 2</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_DataArrival = 3</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_Error = 4</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_SendComplete = 5</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_SendProgress = 6</li>
        <li>End Enum</li>
        <li></li>
      </ol>
      <p>Alle righe 3-5 sono dichiarate le tre variabili membro utilizzate dalla 
        classe: <b>m_Socket</b> &egrave; un controllo Windock<img src="../images/controls/winsock.gif" width="25" height="25" align="absmiddle">con 
        eventi<img src="../images/ide/evento.gif" width="16" height="16" align="absmiddle"> 
        creato mediante la terza soluzione del <a href="clser_07.htm">tutorial 
        precedente</a>. Tutti i suoi eventi saranno passati al gruppo <i><b>clsFBIOnClassSocketGroup</b></i>, 
        che lo contiene, identificato dalla variabile <b>m_Parent</b>. L'ultima 
        variabile membro <b>m_InGroupIndex</b> conterr&agrave; l'indice di questa 
        <a href="../glossary/i.htm#ISTANZA">istanza</a> all'interno del gruppo 
        identificato da <b>m_Parent</b>.</p>
      <p>L'<a href="../glossary/e.htm#ENUMERAZIONE">enumerazione</a> <img src="../images/ide/enumeraz.gif" width="16" height="16" align="absmiddle"> 
        <i>WinsockEvents</i> (righe 7-15) verr&agrave; utilizzata per comunicare 
        l'esecuzione di un evento dal controllo Winsock alla classe <i><b>clsFBIOnClassSocketGroup</b></i>.</p>
      <ol start="17" class="codicevb">
        <li>Private Sub Class_Initialize()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set m_Socket = New Winsock</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set m_Parent = Nothing</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;m_InGroupIndex = -1</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub Class_Terminate()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;On Error Resume Next</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If m_Socket.State &lt;&gt; sckClosed Then 
          m_Socket.Close</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set m_Socket = Nothing</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set m_Parent = Nothing</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p>All'istanza del controllo sar&agrave; <a href="../glossary/a.htm#ALLOCARE">allocato</a> 
        il nuovo controllo Winsock (riga 18) ed inizializzato il valore <b>m_InGroupIndex</b> 
        a -1. In maniera analoga, alla <a href="../glossary/d.htm#DEALLOCARE">deallocazione</a> 
        dell'istanza sar&agrave; inizialmente chiusa l'eventuale connessione lasciata 
        aperta (riga 25) e verranno deallocati i due oggetti <b>m_Socket</b> ed 
        <b>m_Parent</b>.</p>
      <ol start="30" class="codicevb">
        <li>Private Sub m_Socket_Close()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Not m_Parent Is Nothing Then m_Parent.NewEvent 
          m_InGroupIndex, Winsock_Close</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub m_Socket_Connect()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Not m_Parent Is Nothing Then m_Parent.NewEvent 
          m_InGroupIndex, Winsock_Connect</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub m_Socket_ConnectionRequest(ByVal requestID As Long)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Not m_Parent Is Nothing Then m_Parent.NewEvent 
          m_InGroupIndex, Winsock_ConnectionRequest, requestID</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub m_Socket_DataArrival(ByVal bytesTotal As Long)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Not m_Parent Is Nothing Then m_Parent.NewEvent 
          m_InGroupIndex, Winsock_DataArrival, bytesTotal</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub m_Socket_Error(ByVal Number As Integer, Description As 
          String, ByVal Scode As Long, ByVal Source As String, ByVal HelpFile 
          As String, ByVal HelpContext As Long, CancelDisplay As Boolean)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Not m_Parent Is Nothing Then m_Parent.NewEvent 
          m_InGroupIndex, Winsock_Error, Number, Description, Scode, Source, HelpFile, 
          HelpContext, CancelDisplay</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub m_Socket_SendComplete()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Not m_Parent Is Nothing Then m_Parent.NewEvent 
          m_InGroupIndex, Winsock_SendComplete</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub m_Socket_SendProgress(ByVal bytesSent As Long, ByVal bytesRemaining 
          As Long)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Not m_Parent Is Nothing Then m_Parent.NewEvent 
          m_InGroupIndex, Winsock_SendProgress, bytesSent, bytesRemaining</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p>Quelli sopra mostrati sono tutti gli eventi ricevuti dal controllo <b>m_Socket</b> 
        e per ognuno di essi sar&agrave; richiamato il metodo <img src="../images/ide/metodo.gif" width="16" height="16" align="absmiddle"> 
        <b>NewEvent</b> della classe <i><b>clsFBIOnClassSocketGroup</b></i> fornendogli 
        come primo argomento l'indice dell'elemento all'interno del gruppo, indicato 
        da <b>m_InGroupIndex</b>, come secondo argomento un valore dell'enumerazione 
        <i>WinsockEvents</i> e come altri argomenti tutti i dati ricevuti dall'evento 
        del controllo.</p>
      <p>Questo far&agrave; s&igrave; che l'istanza <b>m_Parent</b> ricever&agrave; 
        l'evento generato dal controllo e l'indice del controllo all'interno del 
        gruppo, in modo da comunicarlo all'esterno della classe e permettere al 
        programma la gestione degli eventi dei singoli controlli all'interno del 
        gruppo.</p>
      <ol start="58" class="codicevb">
        <li>Public Property Get Socket() As Winsock</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set Socket = m_Socket</li>
        <li>End Property</li>
        <li></li>
      </ol>
      <p>La propriet&agrave; <b>Socket</b> restituisce il controllo Winsock mantenuto 
        all'interno della classe, per permettere l'impostazione e l'uso dall'esterno.</p>
      <ol start="62" class="codicevb">
        <li>Friend Sub AddToGroup(ByVal Group As clsFBIOnClassSocketGroup, ByVal 
          Index As Integer)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set m_Parent = Group</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;m_InGroupIndex = Index</li>
        <li>End Sub</li>
      </ol>
      <p>L'ultima funzione della classe &egrave; <b>AddToGroup</b> e consente 
        di aggiungere l'istanza corrente ad un gruppo <i><b>clsFBIOnClassSocketGroup</b></i>, 
        che si occuper&agrave; di gestire gli eventi in maniera associata all'indice 
        dell'istanza all'interno del gruppo.</p>
      <hr>
      <p>La seconda classe <i><b>clsFBIOnClassSocketGroup</b></i> si occuper&agrave; 
        di collegare pi&ugrave; istanze della classe <i><b>clsFBIOnClassSocketSingle</b></i> 
        in un unico gruppo. La sua reale funzione &egrave; quella di consentire 
        la creazione di un nuovo controllo Winsock, restituire quelli gi&agrave; 
        esistenti e gestire gli eventi provenienti dai singoli controlli Winsock. 
        Vediamone subito il codice:</p>
      <ol start="1" class="codicevb">
        <li>Option Explicit</li>
        <li>Option Base 1</li>
        <li></li>
        <li>#Const USEARRAY = 1</li>
        <li></li>
        <li>#If USEARRAY = 0 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Private SocketsInterni As Collection</li>
        <li>#Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Private SocketsInterni() As clsFBIOnClassSocketSingle</li>
        <li>#End If</li>
        <li></li>
        <li>Private intSocketsCount As Integer</li>
        <li></li>
      </ol>
      <p>L'istruzione <i>Option Base 1</i> alla riga 2 determina che il limite 
        inferiore di tutte le <a href="../glossary/m.htm#MATRICE">matrici</a> 
        sia 1, anzich&eacute; 0; &egrave; stato richiesto appositamente per mantenere 
        la compatibilit&agrave; tra la Collection (sempre a base 1) e l'array 
        di istanze <i> <b>clsFBIOnClassSocketSingle</b></i> (solitamente a base 
        0).</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>La costante di compilazione condizionale <i><b>USEARRAY</b></i> determina 
        infatti se il codice far&agrave; uso della matrice oppure dell'oggetto 
        Collection. La dichiarazione della base dati <b>SocketsInterni</b> &egrave; 
        effettuata alle righe 6-10. Naturalmente una delle dichiarazioni esclude 
        automaticamente l'altra.</p>
      <p>La variabile <b>intSocketsCount</b> alla riga 12 tiene conto del numero 
        di controlli Winsock contenuti.</p>
      <ol start="14" class="codicevb">
        <li>Private Enum WinsockEvents</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_Close = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_Connect = 1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_ConnectionRequest = 2</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_DataArrival = 3</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_Error = 4</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_SendComplete = 5</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Winsock_SendProgress = 6</li>
        <li>End Enum</li>
        <li></li>
        <li>Public Event WSClose(ByVal Index As Integer)</li>
        <li>Public Event Connect(ByVal Index As Integer)</li>
        <li>Public Event ConnectionRequest(ByVal Index As Integer, ByVal requestID 
          As Long)</li>
        <li>Public Event DataArrival(ByVal Index As Integer, ByVal bytesTotal 
          As Long)</li>
        <li>Public Event Error(ByVal Index As Integer, ByVal Number As Integer, 
          ByVal Description As String, ByVal Scode As Long, ByVal Source As String, 
          ByVal HelpFile As String, ByVal HelpContext As Long, ByVal CancelDisplay 
          As Boolean)</li>
        <li>Public Event SendComplete(ByVal Index As Integer)</li>
        <li>Public Event SendProgress(ByVal Index As Integer, ByVal bytesSent 
          As Long, ByVal bytesRemaining As Long)</li>
        <li></li>
      </ol>
      <p>L'enumerazione <img src="../images/ide/enumeraz.gif" width="16" height="16" align="absmiddle"> 
        <i>WinsockEvents</i>, vista anche nella classe precedente, verr&agrave; 
        utilizzata dalla classe per identificare con facilit&agrave; quale evento 
        &egrave; stato ricevuto. Tali eventi a loro volta saranno rilasciati sull'utilizzatore 
        dell'istanza; gli eventi dichiarati alle righe 24-30 sono i medesimi di 
        un normlae controllo Winsock ma vi aggiungono un primo argomento di nome 
        <i> <b>Index</b></i>, che identifica il singolo controllo nel gruppo, 
        come se si trattasse di una matrice di controlli posta sopra un form.</p>
      <ol start="32" class="codicevb">
        <li>Private Sub Class_Initialize()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;intSocketsCount = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#If USEARRAY = 0 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set SocketsInterni 
          = New Collection</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#End If</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub Class_Terminate()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim intCount As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#If USEARRAY = 0 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For intCount = SocketsInterni.Count 
          To 1 Step -1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SocketsInterni.Remove 
          intCount</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next intCount</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set SocketsInterni 
          = Nothing</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For intCount = UBound(SocketsInterni) 
          To LBound(SocketsInterni) Step -1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set 
          SocketsInterni(intCount) = Nothing</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next intCount</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Erase SocketsInterni</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#End If</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p>All'istanza della classe il numero di elementi contenuti nel gruppo &egrave; 
        0 (riga 33). Se &egrave; stato scelto di usare un oggetto Collection piuttosto 
        che un array, esso sar&agrave; istanziato alla riga 35.</p>
      <p>Alla deallocazione dell'istanza sar&agrave; necessario fare un po' di 
        pulizia: saranno deallocati uno per uno tutti gli oggetti del gruppo (righe 
        42-44 e 47-49); inoltre nel caso di un gruppo Collection sar&agrave; deallocata 
        anche l'istanza <b>SocketsInterni</b> (riga 45); nel caso fosse un array 
        esso sar&agrave; semplicemente azzerato (riga 50).</p>
      <ol start="54" class="codicevb">
        <li>Public Property Get Count() As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Count = intSocketsCount</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Get IsArray() As Boolean</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If USEARRAY = 0 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IsArray = False</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IsArray = True</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#End If</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Get Item(ByVal Index As Integer) As Winsock</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set Item = SocketsInterni(Index).Socket</li>
        <li>End Property</li>
        <li></li>
      </ol>
      <p>Le tre propriet&agrave; sopra dichiarate restituiscono rispettivamente 
        il numero di controlli contenuti nel gruppo (righe 54-56), il tipo di 
        gruppo utilizzato (righe 58-64) ed il controllo Winsock identificato dal'indice 
        Index all'interno del gruppo.</p>
      <ol start="70" class="codicevb">
        <li>#If USEARRAY = 0 Then</li>
        <li>Public Property Get NewEnum() As IUnknown</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set NewEnum = SocketsInterni.[_NewEnum]</li>
        <li>End Property</li>
        <li>#End If</li>
        <li></li>
      </ol>
      <p>Se la classe sta facendo uso di un oggetto Collection sar&agrave; aggiunta 
        una nuova propriet&agrave; (nascosta) di nome <b>NewEnum</b>. Essa consentir&agrave; 
        l'iterazione con tutti gli elementi del gruppo in un ciclo For..Each.<br>
        Nel caso il gruppo utilizzasse un array tale propriet&agrave; semplicemente 
        non sar&agrave; disponibile.</p>
      <p><img src="../images/notes.gif" width="56" height="57" align="left"><b class="colorerosso">Importante!</b><br>
        Affinch&eacute; la propriet&agrave; <b>NewEnum</b> funzioni nella maniera 
        corretta, &egrave; necessario assegnarle ID&nbsp;Routine -4 mediante la 
        finestra di dialogo Strumenti -&gt; Attributi routine.<br>
        Inoltre a causa di un <a href="../glossary/b.htm#BUG">bug</a> nell'<a href="../glossary/i.htm#IDE">IDE</a> 
        di Visual Basic, talvolta questo valore pu&ograve; essere rimosso automaticamente. 
        In caso di errore nell'uso di un ciclo For..Each si raccomanda l'impostazione 
        dell'ID Routine della propriet&agrave; e subito dopo l'impostazione chiudere 
        la finestra di dialogo con OK, <b>senza visualizzare le altre propriet&agrave;</b>.</p>
      <ol start="76" class="codicevb">
        <li>Public Function Add() As Winsock</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim newSocketSingle As clsFBIOnClassSocketSingle</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set newSocketSingle = New clsFBIOnClassSocketSingle</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#If USEARRAY = 0 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SocketsInterni.Add 
          newSocketSingle</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReDim Preserve SocketsInterni(intSocketsCount 
          + 1) As clsFBIOnClassSocketSingle</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set SocketsInterni(intSocketsCount 
          + 1) = newSocketSingle</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;#End If</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;intSocketsCount = intSocketsCount + 1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;newSocketSingle.AddToGroup Me, intSocketsCount</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set Add = newSocketSingle.Socket</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set newSocketSingle = Nothing</li>
        <li>End Function</li>
        <li></li>
      </ol>
      <p>Il metodo pi&ugrave; complesso della classe &egrave; <b>Add</b>, che 
        aggiunge un'istanza <i><b>clsFBIOnClassSocketSingle</b></i> al gruppo 
        e restituisce in uscita un riferimento al controllo Winsock generato.</p>
      <p>La variabile <b>newSocketSingle</b> si &egrave; dimostrata obbligatoria 
        per superare uno sciocco limite degli oggetti Collection. Infatti sebbene 
        ogni elemento della Collection sia un'istanza della classe <i><b>clsFBIOnClassSocketSingle</b></i>, 
        Visual Basic non consente l'uso implicito di un elemento della Collection 
        per operazioni su oggetti, come ad esempio <span class="fixed">SocketsInterni(i).AddToGroup</span>.</p>
      <p>Pertanto alla riga 78 &egrave; allocata una nuova istanza della prima 
        classe ed alle righe 79-84 essa &egrave; aggiunta al gruppo SocketsInterni, 
        nella forma consentita da una fra le due basi di dati. Alla riga 86 la 
        nuova istanza &egrave; aggiunta al gruppo corrente mediante <b>AddToGroup</b>, 
        per consentirle la comunicazione dei suoi eventi al gruppo di appartenenza.</p>
      <p>In uscita dalla funzione saranno in ordine restituiti il nuovo controllo 
        Winsock creato e deallocata la variabile temporanea <b>newSocketSingle</b>.</p>
      <ol start="91" class="codicevb">
        <li>Friend Sub NewEvent(ByVal Index As Integer, WSEvent As WinsockEvents, 
          ParamArray Arguments() As Variant)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Select Case WSEvent</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Winsock_Close</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent 
          WSClose(Index)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Winsock_Connect</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent 
          Connect(Index)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Winsock_ConnectionRequest</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent 
          ConnectionRequest(Index, Arguments(0))</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Winsock_DataArrival</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent 
          DataArrival(Index, Arguments(0))</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Winsock_Error</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent 
          Error(Index, Arguments(0), Arguments(1), Arguments(2), Arguments(3), 
          Arguments(4), Arguments(5), Arguments(6))</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Winsock_SendComplete</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent 
          SendComplete(Index)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Winsock_SendProgress</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent 
          SendProgress(Index, Arguments(0), Arguments(1))</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End Select</li>
        <li>End Sub</li>
      </ol>
      <p>L'ultima funzione della classe &egrave; <b>NewEvent</b>, dichiarata come 
        Friend perch&eacute; dovrebbe essere utilizzata esclusivamente dalle classi 
        <i> <b>clsFBIOnClassSocketSingle</b></i> per la comunicazione degli eventi 
        generati.</p>
      <p>La funzione utilizza un numero indefinito di argomenti: i primi due argomenti 
        identificano l'indice del controllo all'interno del gruppo e l'evento 
        generato, come da enumerazione <i>WinsockConstants</i>. Il terzo argomento 
        &egrave; un Paramarray, cio&egrave; in grado di ricevere un numero indefinito 
        di altri argomenti, che saranno quindi forniti ai singoli eventi richiamati.</p>
      <p>Il funzionamento di questo metodo &egrave; in realt&agrave; molto semplice: 
        in base al valore dell'evento generato sar&agrave; richiamato l'evento 
        di questa classe, che verr&agrave; fornito all'utilizzatore della stessa. 
        Si tratta quindi di un semplice passaggio di dati dalla prima classe alla 
        seconda e da questa verso il programma utilizzatore.</p>
      <hr>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Per dimostrare il funzionamento delle due classi sar&agrave; sviulppato 
        una microscopica chat punto-punto composta da un solo form e 5 caselle 
        di testo. </p>
      <p align="center"><img src="../images/cliserv/cliserv008_01.png" width="281" height="194" alt="Figura 1"><br>
        <b>Figura 1</b></p>
      <p>All'interno del form sar&agrave; allocata una nuova istanza <b>clsFBIOnClassSocketGroup</b> 
        e dichiarata con <i>WithEvents</i> in modo da poterne ricevere gli eventi 
        di ritorno:</p>
      <ol start="1" class="codicevb">
        <li>Option Explicit</li>
        <li></li>
        <li>Private WithEvents Sockets As clsFBIOnClassSocketGroup</li>
        <li></li>
        <li>Private Sub Form_Load()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim varSock As Variant</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set Sockets = New clsFBIOnClassSocketGroup</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;With Sockets</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Add .Item(1).LocalPort 
          = 1000</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Item(1).Listen</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Add</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Item(2).Connect &quot;127.0.0.1&quot;, 
          1000</li>
        <li> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If Not .IsArray Then</li>
        <li> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For 
          Each varSock In Sockets</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print 
          varSock.Socket.LocalPort</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next 
          varSock </li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End With</li>
        <li>End Sub</li>
      </ol>
      <p>Cos&igrave; al caricamento del form l'istanza <b>Sockets</b> &egrave; 
        <a href="../glossary/a.htm#ALLOCARE">allocata</a> e con essa (alle righe 
        9-12) sono creati due controlli Winsock nel gruppo dei quali uno &egrave; 
        posto in ascolto sulla <a href="../glossary/p.htm#PORTATCP">porta TCP</a> 
        1000 (riga 10) e l'altro si connette al primo (riga 12).</p>
      <p>Inoltre, se &egrave; stato deciso di utilizzare la Collection invece 
        dell'array di controlli, sar&agrave; eseguito un ciclo iterativo con <i>For..Each</i> 
        (righe 14-16) che mostrer&agrave; nella finestra immediata l'indirizzo 
        delle porte locali dei due controlli. Naturalmente la sua funzionalit&agrave; 
        &egrave; puramente simbolica per dimostrare il funzionamento della propriet&agrave; 
        <b>NewEnum</b> della classe, in un ciclo <i>For..Each</i>.</p>
      <ol start="20" class="codicevb">
        <li>Private Sub Sockets_ConnectionRequest(ByVal Index As Integer, ByVal 
          requestID As Long)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;With Sockets.Item(Index)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Close</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Accept requestID</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End With</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p>L'evento <b>ConnectionRequest</b> di uno dei due controlli si rispecchia 
        automaticamente (<a href="../glossary/m.htm#MAPPING">mapping</a>) sul 
        medesimo evento dell'istanza <b>Sockets</b>. Tra gli argomenti il primo 
        identifica il controllo Winsock nel gruppo che ha generato l'evento.</p>
      <p>Nel caso specifico al tentativo di collegamento si risponder&agrave; 
        con la chiusura dalla fase d'ascolto e con l'accoglimento della connessione, 
        in questo caso, del primo controllo.</p>
      <ol start="27" class="codicevb">
        <li> Private Sub Sockets_DataArrival(ByVal Index As Integer, ByVal bytesTotal 
          As Long)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim strBuffer As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Sockets.Item(Index).GetData strBuffer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If Index = 1 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtCli1Log.Text = 
          strBuffer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtFullLog.Text = 
          txtFullLog &amp; &quot;[&quot; &amp; Time$ &amp; &quot;] &lt;client2&gt; 
          &quot; &amp; strBuffer &amp; vbNewLine</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtCli2Log.Text = 
          strBuffer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtFullLog.Text = 
          txtFullLog &amp; &quot;[&quot; &amp; Time$ &amp; &quot;] &lt;client1&gt; 
          &quot; &amp; strBuffer &amp; vbNewLine</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End If</li>
        <li>End Sub</li>
      </ol>
      <p>Tralasciamo il resto del codice, pi&ugrave; o meno inutile all'uso della 
        classe e vediamo l'uso di un altro evento dell'istanza Sockets: <b>DataArrival</b>. 
        Alla riga 29 sono letti i dati diretti <b>al controllo</b> interessato 
        ed alla riga successiva &egrave; verificata la destinazione dei dati (argomento 
        <i>Index</i>).</p>
      <p>Se i dati sono diretti al primo controllo (riga 30) dovranno essere quindi 
        essere inviati alla casella dei messaggi del primo controllo <b>txtCli1Log</b>; 
        viceversa i dati saranno inviati alla casella <b>txtCli2Log</b>.<br>
        In entrambi i casi una copia dei dati &egrave; inviata alla grande casella 
        di testo <b>txtFullLog</b> con tutti i messaggi ricevuti, differenziandone 
        per&ograve; l'origine (righe 32 e 35).<br>
        <br>
      </p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --> 
      <p>Non &egrave; stato possibile affrontare l'argomento della microchat completamente 
        perch&eacute; avrebbe richiesto troppo spazio. La sua funzionalit&agrave; 
        tuttavia &egrave; davvero molto semplice e si &egrave; preferito dedicare 
        maggiore spazio alle due classi <i><b>clsFBIOnClassSocketSingle</b></i> 
        e <b><i>clsFBIOnClassSocketGroup</i></b> che formano il gruppo di controlli 
        Winsock.</p>
      <p>Il loro funzionamento &egrave; davvero molto semplice e per molti versi 
        simile al comportamento di una matrice di controlli Winsock posti sopra 
        la superficie di un form.<br>
        Per ragioni di efficienza si &egrave; preferito non sviluppare una funzione 
        per l'eliminazione di un controllo dal gruppo.</p>
      <!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI</a><br>
        13 Novembre 2002<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><a href="index.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna all'indice Client/Server</a></td>
    <td align="right">&nbsp;</td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
