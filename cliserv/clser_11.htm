<html><!-- #BeginTemplate "/Templates/ClientServer.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Effettuare un PING tramite WSA e ICMP.DLL</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo"><!-- #BeginEditable "TITOLO" -->Effettuare un Ping tramite 
    WSA e ICMP.DLL<!-- #EndEditable --> 
    <!-- #BeginEditable "API" --><img src="../images/api.gif" width="34" height="24" align="absmiddle"><!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/cliserv.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
  </div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"> 
      <table width="100%"><tr><td align="left" nowrap><style type="text/css">
@import url(http://www.google.com/cse/api/branding.css);
</style>
<div class="cse-branding-right" style="background-color:#FFFFFF;color:#000000">
  <div class="cse-branding-form">
    <form action="http://www.google.it/cse" id="cse-search-box">
      <div>
        <input type="hidden" name="cx" value="partner-pub-8218922773694577:rv2o52-qh5a" />
        <input type="hidden" name="ie" value="ISO-8859-1" />
        <input type="text" name="q" size="20" />
        <input type="submit" name="sa" value="Cerca" />
      </div>
    </form>
  </div>
  <div class="cse-branding-logo">
    <img src="http://www.google.com/images/poweredby_transparent/poweredby_FFFFFF.gif" alt="Google" />
  </div>
  <div class="cse-branding-text">
    Ricerca personalizzata
  </div>
</div></td><td align="right">
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><!-- #BeginEditable "DIFFICOLTA" --><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level3.gif" width="17" height="18" align="absmiddle"> 
        3<!-- #EndEditable --> / 5</p>
</td></tr></table>
      <script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" --> 
      <p>Il termine <b>Ping</b> &egrave; ormai entrato nel dizionario comune di 
        qualsiasi sistemista e molti utenti di computer; il termine tecnico di 
        questo genere di operazione &egrave; <b>ICMP Echo</b> e si tratta di una 
        richiesta (<i>ECHO Request</i>) fatta mediante il protocollo <a href="../glossary/i.htm#ICMP">ICMP</a> 
        (<i>Internet Control Message Protocol</i>) a cui il destinatario deve 
        rispondere (<i>ECHO Response</i>) con gli stessi dati ricevuti. Per questa 
        ragione la funzione prende il nome di ICMP Echo (Eco) e la sua implementazione 
        pi&ugrave; comune &egrave; data dal programma <i>PING</i>.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Il progetto sviluppato in questo articolo utilizza le classi <a href="clser_09.htm">clsFBISocket</a> 
        e <a href="clser_10.htm">clsFBISocketInfo</a> trattate negli articoli 
        precedenti e vi aggiunge una semplice richiesta ICMP Echo e tutto ci&ograve; 
        che vi gira attorno (tempo di risposta, dati di ritorno, codici di errore). 
        L'attivit&agrave; di Echo &egrave; demandata alla libreria ICMP.DLL presente 
        in quasi tutti i sistemi operativi Windows.</p>
      <p><!-- #BeginLibraryItem "/Library/Notes1.lbi" --><img src="../images/notes.gif" width="56" height="57" align="left"><!-- #EndLibraryItem --><a href="../glossary/m.htm#MICROSOFT">Microsoft</a> 
        scoraggia l'uso della libreria ICMP.DLL e da qualche anno avvisa che nelle 
        versioni future del sistema operativo potrebbe essere assente; tuttavia 
        fino all'ultima attuale versione di Windows (Windows 2003 Server) la libreria 
        &egrave; ancora presente. Anche per questa ragione la documentazione sulle 
        funzioni della libreria ICMP sono poche e confuse. Microsoft consiglia 
        invece di utilizzare i cosiddetti socket grezzi (<b>RAW Sockets</b>) disponibili 
        a partire da Windows Socket 2.0. L'implementazione tuttavia richiede notevoli 
        complicazioni che al giorno d'oggi &egrave; possibile evitare.</p>
      <p>Vediamo quindi il codice della classe <b>clsFBISocketPing</b>, come gi&agrave; 
        detto basata sulle funzionailt&agrave; di ICMP.DLL:</p>
      <ol start="1" class="codicevb">
        <li>Option Explicit</li>
        <li></li>
        <li>Private Type ICMP_OPTIONS</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;TTL As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Tos As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Flags As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;OptionsSize As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;OptionsData As Long</li>
        <li>End Type</li>
        <li></li>
        <li>Private Type ICMP_ECHO_REPLY</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Address As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Status As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;RoundTripTime As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;DataSize As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Reserved As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;DataPointer As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Options As ICMP_OPTIONS</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Data As String * 256</li>
        <li>End Type</li>
        <li></li>
      </ol>
      <p>Le due strutture ICMP_OPTIONS e ICMP_ECHO_REPLY sono ricavate da informazioni 
        trovate sul web e da numerose prove. Trovare una documentazione ufficiale 
        su queste non &egrave; cosa affatto facile. La prima struttura <i><b>ICMP_OPTIONS</b></i> 
        definisce le opzioni relative all'invio (ECHO Request) ed alla risposta 
        (ECHO Response). Il pi&ugrave; importante di questi valori &egrave; il 
        campo TTL (<i>Time To Live</i>) che definisce il numero massimo di salti 
        che il pacchetto potr&agrave; fare, ovvero il numero massimo di router 
        che il pacchetto potr&agrave; attraversare prima di essere scartato perch&eacute; 
        considerato scaduto. Nel nostro esempio utilizzeremo il valore massimo 
        255.</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>L'altro tipo di dati &egrave; <i><b>ICMP_ECHO_REPLY</b></i> e costituisce 
        il pacchetto di ritorno dalla funzione che effettuer&agrave; il ping. 
        Al suo interno contiene l'indirizzo IP decimale dell'host (<i>Address</i>) 
        che ha risposto alla richiesta, un codice di ritorno (<i>Status</i>), 
        il tempo impiegato dal pacchetto (<i>RoundTripTime</i>), i dati restituiti 
        (<i>Data</i>) e la loro ampiezza (<i>DataSize</i>), assieme alle opzioni 
        con cui il pacchetto di ritorno dall'host &egrave; stato inviato (<i>Options</i>).</p>
      <ol start="22" class="codicevb">
        <li>Private Declare Function IcmpCreateFile Lib &quot;ICMP.DLL&quot; () 
          As Long</li>
        <li>Private Declare Function IcmpCloseHandle Lib &quot;ICMP.DLL&quot; 
          (ByVal IcmpHandle As Long) As Long</li>
        <li>Private Declare Function IcmpSendEcho Lib &quot;ICMP.DLL&quot; (ByVal 
          IcmpHandle As Long, ByVal DestinationAddress As Long, ByVal RequestData 
          As String, ByVal RequestSize As Integer, RequestOptions As ICMP_OPTIONS, 
          ReplyBuffer As ICMP_ECHO_REPLY, ByVal ReplySize As Long, ByVal Timeout 
          As Long) As Long</li>
        <li></li>
        <li>Private WithEvents fbiSocket As clsFBISocketInfo</li>
        <li>Private echoReply As ICMP_ECHO_REPLY</li>
        <li>Private icmpOptions As ICMP_OPTIONS</li>
        <li>Private m_Timeout As Long</li>
        <li></li>
        <li>Public Event Error(ByVal ErrorCode As Long, ByVal Description As String, 
          ByRef Cancel As Boolean)</li>
        <li></li>
      </ol>
      <p>Affinch&egrave; sia possibile inviare il pacchetto di richiesta &egrave; 
        necessario ottenere prima un <a href="../glossary/h.htm#HANDLE">handle</a> 
        e ci&ograve; pu&ograve; essere fatto richiamando la funzione <b>IcmpCreateFile</b>. 
        Lo stesso handle deve essere rilasciato mediante la funzione <b>IcmpCloseHandle</b>. 
        Il cuore di tutto questo articolo &egrave; invece la terza funzione: <b>IcmpSendEcho</b>, 
        che richiede il numero di handle (<i>IcmpHandle</i>), l'indirizzo di destinazione 
        (<i>DestinationAddress</i>) espresso in maniera decimale, il pacchetto 
        di dati da inviare (<i>RequestData</i>) e la sua ampiezza (<i>RequestSize</i>), 
        la specifica delle opzioni (<i>RequestOption</i>) con cui inviare il pacchetto, 
        una struttura per accogliere i risultati (<i>ReplyBuffer</i>) e la sua 
        relativa ampiezza (<i>ReplySize</i>) ed infine il tempo in millesimi di 
        secondo (<i>Timeout</i>) prima che la richiesta possa essere considerata 
        scaduta.</p>
      <p>Abbiamo naturalmente utilizzato un'istanza della classe <i>clsFBISocketInfo</i> 
        trattata nell'articolo precedente, i cui errori saranno inviati al programma 
        utilizzatore della presente classe mediante l'evento <i><b>Error</b></i> 
        ridefinito in questa. Il membro <b>echoReply</b> conterr&agrave; i dati 
        di risposta del pacchetto di richiesta, mentre <b>icmpOptions</b> sar&agrave; 
        utilizzato per indicare le opzioni del pacchetto inviato, nel caso in 
        dettaglio, per specificare il <i>TTL</i> di andata. Il membro m_Timeout 
        conterr&agrave; il valore della propriet&agrave; Timeout definita in seguito.</p>
      <ol start="33" class="codicevb">
        <li>Private Sub Class_Initialize()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set fbiSocket = New clsFBISocketInfo</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;m_Timeout = 1000</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;icmpOptions.TTL = 255</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub Class_Terminate()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set fbiSocket = Nothing</li>
        <li>End Sub</li>
        <li></li>
        <li>Private Sub fbiSocket_Error(ByVal ErrorCode As Long, ByVal Description 
          As String, Cancel As Boolean)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;RaiseEvent Error(ErrorCode, Description, Cancel)</li>
        <li>End Sub</li>
        <li></li>
      </ol>
      <p>Naturalmente durante la fase di inizializzazione &egrave; istanziato 
        l'oggetto fbiSocket ed assegnati i valori predefiniti alle propriet&agrave; 
        Timeout e TTL. Analogamente alla distruzione dell'oggetto sar&agrave; 
        eliminato anche l'oggetto dipendente e quindi liberate le risorse. Come 
        gi&agrave; detto tutti gli errori ricevuti dall'oggetto <b>fbiSocket</b> 
        saranno propagati all'utilizzatore della presente classe che potr&agrave; 
        provvedere ad annullare la visualizzazione del messaggio di errore.</p>
      <ol start="47" class="codicevb">
        <li>Public Function Ping(ByVal Host As String, ByVal Data As String) As 
          Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim hFile As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Data = Left(Data, Len(echoReply.Data))</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;hFile = IcmpCreateFile</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Ping = -1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If hFile = 0 Then</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call fbiSocket.Socket.HandleError(21, 
          "Impossibile creare un handle valido")</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Else</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If IcmpSendEcho(hFile, 
          fbiSocket.HostToLong(Host, 0), Data, Len(Data), icmpOptions, echoReply, 
          Len(echoReply), m_Timeout) &lt;&gt; 0 Then _</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ping 
          = echoReply.Status</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call IcmpCloseHandle(hFile)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End If</li>
        <li>End Function</li>
        <li></li>
      </ol>
      <p>Il primo metodo <!-- #BeginLibraryItem "/Library/Metodo.lbi" --><img src="../images/ide/metodo.gif" width="16" height="16" align="absmiddle">&nbsp;<!-- #EndLibraryItem -->e 
        quello principale &egrave; sicuramente <b>Ping</b>. Da questo dipendono 
        tutti i valori di ritorno e sostanzialmente consiste di poche e semplici 
        righe; richiede unicamente l'host di destinazione ed i dati da inviare; 
        la riga 49 assicura che i dati richiesti non superino l'ampiezza del buffer 
        dedicato nella struttura ICMP_ECHO_REPLY, mentre la riga 51 inizializza 
        il valore di ritorno della funzione a -1, ad indicare un avvenuto errore; 
        in caso di successo (riga 56) questo valore sar&agrave; modificato.</p>
      <p>Ad ogni utilizzo sar&agrave; creato un handle mediante IcmpCreateFile: 
        in caso di insuccesso verr&agrave; generato un errore e la funzione restituir&agrave; 
        valore -1, mentre in caso di successo lo stesso handle sar&agrave; fornito 
        alla funzione <b>IcmpSendEcho</b>, assieme a tutti gli altri dati richiesti. 
        L'indirizzo di destinazione in maniera decimale &egrave; ottenuto richiamando 
        il metodo HostToLong della classe <i>clsFBISocketInfo</i>. Con la richiesta 
        saranno specificate anche le opzioni (<b>icmpOptions</b>), il pacchetto 
        di ritorno (<b>echoReply</b>) ed il tempo massimo per eseguire la richiesta 
        (<b>m_Timeout</b>).</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Se la richiesta ha avuto buon fine, cio&egrave; &egrave; stato possibile 
        effettuarla senza errori di sistema, il suo valore &egrave; differente 
        da zero e pertanto la funzione restituir&agrave; il codice di errore contenuto 
        nel campo <i><b>Status</b></i> della pacchetto di risposta (riga 56). 
        In seguito sar&agrave; possibile liberare l'handle riservato in precedenza.</p>
      <p>Seguono le numerose propriet&agrave; relative ordinate per tipologia: 
        le prime indicheranno valori da utilizzare nella richiesta, mentre le 
        ultime corrisponderanno al recupero dei dati restituiti dalla richiesta 
        di echo.</p>
      <ol start="61" class="codicevb">
        <li>Public Property Get Timeout() As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Timeout = m_Timeout</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Let Timeout(ByVal newValue As Long)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;m_Timeout = newValue</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Get TTL() As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;TTL = icmpOptions.TTL</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Let TTL(ByVal newValue As Byte)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;icmpOptions.TTL = newValue</li>
        <li>End Property</li>
        <li></li>
      </ol>
      <p>Le due propriet&agrave; relative alla richiesta sono <b>Timeout</b> e 
        <b>TTL</b> che specificano rispettivamente il tempo massimo ed il numero 
        di salti che il pacchetto &egrave; in grado di attraversare prima che 
        la richiesta possa considerarsi scaduta.</p>
      <ol start="77" class="codicevb">
        <li>Public Property Get EchoAddress() As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;EchoAddress = fbiSocket.LongToIP(echoReply.Address)</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Get TripTime() As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If echoReply.Status = 0 Then TripTime = echoReply.RoundTripTime</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Get Reply() As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;If echoReply.Status = 0 Then Reply = Left$(echoReply.Data, 
          echoReply.DataSize)</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Get TTLReply() As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;TTLReply = echoReply.Options.TTL</li>
        <li>End Property</li>
        <li></li>
        <li>Public Property Get Status() As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Status = echoReply.Status</li>
        <li>End Property</li>
        <li></li>
      </ol>
      <p>Le propriet&agrave; a sola lettura <b>EchoAddres</b>, <b>TripTime</b>, 
        <b>Reply</b>, <b>TTLReply</b> e <b>Status</b> restituiscono rispettivamente 
        l'indirizzo da cui proviene la risposta, il tempo che il pacchetto ha 
        impiegato per ritornare, i dati contenuti nel pacchetto di ritorno (che 
        per il pacchetto ECHO_RESPONSE dovrebbero essere gli stessi della richiesta 
        ECHO_REQUEST), il TTL del pacchetto restituito ed il codice di ritorno 
        dell'operazione. Un codice di 0 indica un successo mentre tutti gli altri 
        valori indicano errori che trovano la loro descrizione nella propriet&agrave; 
        seguente:</p>
      <ol start="97" class="codicevb">
        <li>Public Property Get StatusDescription() As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Select Case echoReply.Status</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 0: StatusDescription 
          = &quot;Successo&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 200: StatusDescription 
          = &quot;Tempo massimo superato&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11001: StatusDescription 
          = &quot;Buffer troppo piccolo&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11002: StatusDescription 
          = &quot;Rete di destinazione irraggiungibile&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11003: StatusDescription 
          = &quot;Host di destinazione irraggiungibile&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11004: StatusDescription 
          = &quot;Protocollo di destinazione irraggiungibile&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11005: StatusDescription 
          = &quot;Porta di destinazione irraggiungibile&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11006: StatusDescription 
          = &quot;Risorse insufficienti&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11007: StatusDescription 
          = &quot;Opzioni errate&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11008: StatusDescription 
          = &quot;Errore hardware&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11009: StatusDescription 
          = &quot;Pacchetto troppo grande&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11010: StatusDescription 
          = &quot;Richiesta scaduta&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11011: StatusDescription 
          = &quot;Richiesta errata&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11012: StatusDescription 
          = &quot;Rotta errata&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11013: StatusDescription 
          = &quot;TTL scaduto nella trasmissione&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11014: StatusDescription 
          = &quot;TTL scaduto nel riassemblaggio&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11015: StatusDescription 
          = &quot;Errori nei parametri&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11016: StatusDescription 
          = &quot;Origine spenta&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11017: StatusDescription 
          = &quot;Opzioni troppo grandi&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11018: StatusDescription 
          = &quot;Destinazione errata&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11019: StatusDescription 
          = &quot;Indirizzo cancellato&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 11050: StatusDescription 
          = &quot;Errore generale&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case Else: StatusDescription 
          = &quot;Errore sconosciuto&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End Select</li>
        <li>End Property</li>
      </ol>
      <p>Credo che quest'ultima propriet&agrave; non necessiti di commenti, una 
        lunga sequenza di controlli di un unico valore determina il messaggio 
        di errore corrispondente.</p>
      <hr>
      <p><img src="../images/cliserv/cliserv011_01.png" width="202" height="177" align="right" alt="Figura 1">Scriveremo 
        un semplicissimo front-end a questa classe che gi&agrave; svolge totalmente 
        il suo lavoro; si comporr&agrave; di un solo form ed una serie di caselle 
        di testo per contenere i dati delle richieste e ricevere quelli delle 
        risposte.</p>
      <p>Naturalmente tutta la sezione superiore &egrave; dedicata ai dati di 
        input ed inizialmente conterr&agrave; i valori predefiniti: TTL di 255 
        salti e Timeout di 1000 millisecondi (1 secondo). Il campo della destinazione 
        potr&agrave; contenere un indirizzo IP oppure il nome di un host da interrogare.</p>
      <p>Il suo utilizzo &egrave; semplice quanto banale e di fianco &egrave; 
        riportato un esempio del suo utilizzo su una macchina in rete locale. 
        Possiamo notare di curioso che le macchine interrogate rispondono sempre 
        con un TTL di 128 passaggi.</p>
      <p>Se volessimo simulare il funzionamento dell'applicazione Ping di Windows 
        dovremmo semplicemente impostare un TTL di 255 salti ed un pacchetto dati 
        di tutte le lettere alfabetiche minuscole e consecutive dalla a alla w, 
        eventualmente ripetendo la sequenza se i 23 caratteri non dovessero bastare. 
        L'opzione standard di Ping di Windows prevede un pacchetto dati composto 
        da abcdefghijklmnopqrstuvwabcdefghi per un totale di 32 caratteri.<br>
        <br>
      </p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --> 
      <p>Come gi&agrave; detto, l'articolo utilizza il protocollo ICMP, e non 
        i protocolli TCP o UDP utilizzabili mediante il controllo OCX Winsock. 
        Questo genere di applicazione &egrave; possibile soltanto utilizzando 
        le funzioni WSA oppure appoggiandosi ad un controllo esterno che effettui 
        questo lavoro per conto nostro.</p>
      <!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI</a><br>
        28 Marzo 2004<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><a href="index.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna all'indice Client/Server</a></td>
    <td align="right">&nbsp;</td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
