<html><!-- #BeginTemplate "/Templates/Corso Intermedio.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Capitolo 6 del Corso Intermedio</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo">Corso Intermedio - Lezione <!-- #BeginEditable "LEZIONE" -->6<!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/intermed.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<!-- #BeginEditable "ARGOMENTI" --> 
<ul>
  <li><a href="int_06.htm#STEP1">Inizializzazione delle propriet&agrave;</a>.</li>
  <li><a href="int_06.htm#STEP2">L'istruzione With ... End With</a>.</li>
  <li><a href="int_06.htm#STEP3">L'istruzione Put per la scrittura di dati su 
    file</a>.</li>
  <li><a href="int_06.htm#STEP4">La funzione LOF</a>.</li>
  <li><a href="int_06.htm#STEP5">Istruzioni e Funzioni basate sul numero di file</a>.</li>
</ul>
<!-- #EndEditable -->
<hr>

<table width="100%" border="0">
  <tr> 
    <td width="80%"><script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" -->
      <p><a name="STEP1"></a>Nella <a href="int_04.htm">lezione 4</a> abbiamo 
        deciso di non preoccuparci troppo delle propriet&agrave; dei controlli 
        ed assegnar loro in <a href="../glossary/f.htm#FASEDIPROGETTAZIONE">fase 
        di progettazione</a> solo quelle propriet&agrave; di sola lettura durante 
        la <a href="../glossary/f.htm#FASEDIESECUZIONE">fase di esecuzione</a>. 
        Questo, abbiamo detto, favorisce la <a href="int_04.htm#STEP2">generalizzazione 
        del codice</a> e semplifica il riutilizzo del codice dopo una serie di 
        modifiche.</p>
      <p>All'avvio del progetto sar&agrave; quindi necessario inizializzare quelle 
        propriet&agrave; non regolate durante la progettazione. In particolare, 
        la funzione <b>Len</b> consente di determinare la lunghezza di una stringa 
        (soprattutto quando questa &egrave; a lunghezza fissa) e tale valore dovr&agrave; 
        essere assegnato alla propriet&agrave; <i><b>MaxLength</b></i> di alcune 
        caselle di testo, in modo da limitare l'immissione di testo in ognuna 
        di esse.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>L'inizializzazione delle propriet&agrave; dei controlli dovrebbe avvenire 
        prima di ogni utilizzo dei controlli, in modo da avere la sicurezza che 
        le operazioni su di essi vengano svolte nella maniera corretta. Non &egrave; 
        allora assurdo dire che l'inizializzazione di tutte le propriet&agrave; 
        debba avere la priorit&agrave; massima durante il carimento del loro form 
        contenitore. Per questa ragione l'operazione sar&agrave; effettuata all'interno 
        dell'<a href="../glossary/e.htm#EVENTO">evento</a> <img src="../images/ide/evento.gif" width="16" height="16" align="absmiddle"> 
        <i>Load</i> del Form, come segue:</p>
      <ol class="codicevb">
        <li>Private Sub Form_Load()</li>
        <li> &nbsp;&nbsp;&nbsp;&nbsp;txtTitoloBrano.MaxLength = Len(udtDiscoCorrente.strTitoloBrano)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtAutoreBrano.MaxLength = Len(udtDiscoCorrente.strAutore)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtTitoloCD.MaxLength = Len(udtDiscoCorrente.strTitoloCD)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtNote.MaxLength = Len(udtDiscoCorrente.strNote)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtNumeroTraccia.MaxLength = 2</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtAnnoPubblicazione.MaxLength = 4</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;cmdEliminaBrano.Enabled = False</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;cmdModificaBrano.Enabled = False</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;....</li>
      </ol>
      <p><a name="STEP2"></a>Questo metodo sebbene funzioni e sia anche formalmente 
        corretto non &egrave; molto efficiente.<br>
        Infatti ogni volta che viene fatto riferimento ad un membro di un oggetto 
        o di una struttura con una sintassi cos&igrave; esplicita il compilatore 
        spreca del tempo inutile a valutare il codice alla sinistra del punto 
        che precede il nome del membro: nel nostro esempio si tratta di <b>udtDiscoCorrente</b>, 
        che verr&agrave; valutato ben 4 volte inutilmente, solo per indicare a 
        quale struttura o oggetto il membro (<i>strTitoloBrano</i>, <i>strAutore</i>, 
        <i>strTitoloCD</i> e <i>strNote</i>) appartiene; questa operazione &egrave; 
        detta <b>qualificazione degli identificatori</b>.</p>
      <p>Il linguaggio ci viene incontro con un istruzione utile a qualificare 
        una volta sola una struttura o un oggetto ed indicare di volta in volta 
        i suoi membri omettendone il nome del qualificatore.<br>
        Ovvero l'istruzione <i></i> <i><b>With&nbsp;...&nbsp;End&nbsp;With</b></i> 
        consente indicare l'inizio e la fine di un blocco di codice per il quale 
        viene applicato il concetto di autoqualificazione espresso precedentemente. 
        Il suo funzionamento &egrave; estremamente semplice:</p>
      <p class="codicevb2">With <b>&lt;qualificatore&gt;</b><br>
        &nbsp;&nbsp;&nbsp;&nbsp;.<b>&lt;identificatore&gt;</b> = Oggetto.Height<br>
        &nbsp;&nbsp;&nbsp;&nbsp;If .<b>&lt;identificatore&gt;</b> = valore Then 
        valore = .<b>&lt;identificatore&gt;</b><br>
        End With</p>
      <p>Naturalmente <b>&lt;qualificatore&gt;</b> indicher&agrave; il nome di 
        un oggetto o di una struttura, mentre <b>&lt;identificatore&gt;</b> indicher&agrave; 
        un membro del qualificatore.</p>
      <p>La prima delle quattro righe definisce il qualificatore da utilizzare 
        per tutti gli identificatori all'interno del blocco, per i quali non &egrave; 
        specificato un altro qualificatore. Questo significa che all'interno del 
        blocco <i><b>With&nbsp;...&nbsp;End&nbsp;With</b></i> potremo comunque 
        utilizzare altri qualificatori per fare riferimento ad altri oggetti o 
        strutture.</p>
      <p>La seconda riga infatti assegna il valore della propriet&agrave; Height 
        di Oggetto (ovvero di un altro qualificatore) all'identificatore autoqualificato. 
        L'identificatore utilizzato in questa maniera non &egrave; soggetto ad 
        alcuna limitazione; la terza riga ne mostra la sua lettura e la sua scrittura, 
        come se il riferimento fosse pienamente qualificato con <b>&lt;qualificatore&gt;.&lt;identificatore&gt;</b>.</p>
      <p>Il qualificatore sar&agrave; quindi valutato soltanto una volta e tutti 
        i successivi riferimenti abbreviati assumeranno quel qualificatore. Il 
        programma ne guadagner&agrave; in prestazioni quando faremo riferimento 
        ad identificatori autoqualificati almeno due volte all'interno del blocco. 
        &Egrave; per&ograve; necessario tenere a mente la rigidit&agrave; di questa 
        regola: <b>il qualificatore sar&agrave; valutato soltanto una volta all'inizio 
        del blocco</b>.</p>
      <p>Ci&ograve; comporta un rischio quando il codice all'interno del blocco 
        autoqualificato tenta di modificare lo stesso qualificatore. Il resto 
        del codice continuer&agrave; a fare riferimento al primo qualificatore, 
        perch&eacute; valutato solo una volta. Ad esempio il codice seguente potrebbe 
        trarre in inganno:</p>
      <ol class="codicevb">
        <li> Dim txtCasella As TextBox</li>
        <li>Set txtCasella = Text1</li>
        <li>With txtCasella</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;MsgBox .Name</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Set txtCasella = Text2</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;MsgBox txtCasella.Name</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;MsgBox .Name</li>
        <li>End With</li>
        <li></li>
        <li>With txtCasella</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;MsgBox .Name</li>
        <li>End With</li>
      </ol>
      <p>Alla riga 3 la variabile oggetto <i><b>txtCasella</b></i> indicher&agrave; 
        che l'identificatore <b>Name</b> utilizzato nelle righe successive appartiene 
        all'oggetto <i><b>Text1</b></i>. La riga 5 che dovrebbe assegnare alla 
        variabile <b><i>txtCasella</i></b> l'oggetto <i><b>Text2</b></i> produce 
        il suo effetto, come mostrato dall'esecuzione della riga 6, ma il riferimento 
        autoqualificato della riga 7 continuer&agrave; a puntare all'oggetto d'origine 
        (<i><b>Text1</b></i>).<br>
        Il qualificatore sar&agrave; nuovamente valutato all'uscita del blocco 
        <i><b>With&nbsp;...&nbsp;End&nbsp;With</b></i>, come mostrato alle righe 
        10-12 che mostreranno il valore <i><b>Text2</b></i>.</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Tornando al progetto, il codice di inizializzazione delle propriet&agrave; 
        dei controlli potrebbe essere il seguente:</p>
      <ol class="codicevb">
        <li>Private Sub Form_Load()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;With udtDiscoCorrente</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtTitoloBrano.MaxLength 
          = Len(.strTitoloBrano)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtAutoreBrano.MaxLength 
          = Len(.strAutore)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtTitoloCD.MaxLength 
          = Len(.strTitoloCD)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtNote.MaxLength 
          = Len(.strNote)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End With</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtNumeroTraccia.MaxLength = 2</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;txtAnnoPubblicazione.MaxLength = 4</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;cmdEliminaBrano.Enabled = False</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;cmdModificaBrano.Enabled = False</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;...</li>
      </ol>
      <p>Avremo due righe di codice in pi&ugrave; (righe 2 e 7) ma i 4 identificatori 
        all'interno di questo blocco saranno qualificati soltanto una volta, a 
        beneficio della velocit&agrave; di esecuzione.</p>
      <p>Le righe 8-11 non necessitano del qualificatore <b>udtDiscoCorrente</b> 
        e pertanto sono state escluse dal blocco <i><b>With&nbsp;...&nbsp;End&nbsp;With</b></i>. 
        Avremmo anche potuto inserirle all'interno di quel blocco senza migliorarne 
        n&eacute; peggiorarne le prestazioni.</p>
      <hr>
      <p><img src="../images/lezioni/int02_07.png" width="347" height="200" align="right"><a name="STEP3"></a>Fino 
        a questo punto il nostro progetto non fa nulla di realmente utile.</p>
      <p>La prima operazione che svilupperemo sar&agrave; l'inserimento di un 
        brano nell'archivio aperto al caricamento del form.</p>
      <p>Il codice che svilupperemo sar&agrave; quindi legato all'evento <img src="../images/ide/evento.gif" width="16" height="16" align="absmiddle"> 
        <i>Click</i> del controllo <b>cmdAggiungi</b>.</p>
      <p>L'operazione in sostanza dovr&agrave; riempire il record <b>udtDiscoCorrente</b> 
        con i valori delle varie caselle di testo e successivamente scrivere l'intero 
        record all'interno del file di dati. Ci&ograve; garantir&agrave; la corretta 
        scrittura dei dati nella posizione, ordine ed ampiezza corrette.</p>
      <p>Tuttavia, almeno all'inizio, non sar&agrave; effettuato alcun controllo 
        sui dati inseriti, ovvero sui campi <i>Numero traccia</i> ed <i>Anno pubblicazione</i>; 
        ci limiteremo a convertirli in numeri e scriverli all'interno del corrispondente 
        campo del record.</p>
      <p>La scrittura di dati in un file con accesso Random &egrave; effettuata 
        mediante l'istruzione <b>Put</b> che utilizza la seguente sintassi:</p>
      <p class="codicevb2">Put [#]<b>&lt;numerofile&gt;</b>, [<b>&lt;posizione&gt;</b>], 
        <b>&lt;dati&gt;</b></p>
      <p>Del simbolo <b>#</b> ne discuteremo <a href="int_06.htm#STEP5">subito 
        dopo</a>. L'istruzione <b>Put</b> richiede naturalmente un <i><b>numero 
        di file</b></i> gi&agrave; aperto e pronto a ricevere dati, cio&egrave; 
        non aperto in modalit&agrave; <i>Input</i>. Il secondo argomento dell'istruzione 
        consente di specificare la posizione (espressa in numero di record per 
        i files ad accesso Random oppure in numero di bytes per i files ad accessso 
        Binary) in cui andranno scritti i dati. Se la posizione non viene specificata 
        i dati saranno scritti nella posizione di scrittura corrente.</p>
      <p>L'ultimo argomento dell'istruzione indica i dati da scrivere e pu&ograve; 
        includere costanti o variabili di tipi elementari o definiti dall'utente, 
        individuali o poste in matrici statiche o dinamiche. Per ognuno di questi 
        tipi di dati saranno applicate delle regole di memorizzazione particolari, 
        includendo un descrittore prima dei dati dati stesssi, ma in questa fase 
        iniziale non &egrave; fondamentale conoscere come saranno scritti i dati 
        all'interno del file poich&eacute; il tutto avverr&agrave; in maniera 
        invisibile al programmatore.<br>
        L'istruzione <b>Put</b> <span class="sottolineato">non consente</span> 
        di scrivere variabili Oggetto in un file.</p>
      <p>Non dovremmo avere problemi nell'assegnare un valore al primo ed al terzo 
        argomento dell'istruzione; abbiamo gi&agrave; il numero del file (<b>intFileDati</b>) 
        ed i dati da scrivere corrispondono al nostro record (<b>udtDiscoCorrente</b>). 
        Qualche problema potrebbe crearcelo l'argomento <b>&lt;posizione&gt;</b> 
        che specifica il numero del record in cui andranno scritti i nostri dati.</p>
      <p><a name="STEP4"></a>Un aiuto concreto pu&ograve; fornircelo la funzione 
        <b>LOF</b> (<i>Length Of File</i>) che come dice il nome, restituisce 
        la lunghezza in bytes del file specificato. La sua sintassi, molto semplice, 
        &egrave;:</p>
      <p class="codicevb2">LOF(<b>&lt;numerofile&gt;</b>)</p>
      <p>Restituisce un valore <i>Long</i> che corrisponde al numero di bytes 
        contenuti nel file indicato da <b>&lt;numerofile&gt;</b>.</p>
      <p>Mediante questa funzione &egrave; molto semplice sapere il numero di 
        record a dimensione fissa gi&agrave; presenti all'interno del file. Ad 
        esempio il nostro record a dimensione fissa occupa esattamente 343&nbsp;bytes, 
        valore ottenibile mediante la funzione <b>Len</b> gi&agrave; vista nelle 
        lezioni precedenti. Pertanto un file di 1372&nbsp;bytes conterr&agrave; 
        4 records (1372 / 343) al suo interno.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Tornando all'istruzione Put, la posizione di scrittura, pertanto, potr&agrave; 
        essere calcolata con estrema semplicit&agrave; facendo riferimento al 
        numero di records gi&agrave; presenti all'interno del file +1.</p>
      <p>Alla luce di tutto quanto visto in questa lezione, il codice per l'evento 
        <i>Click</i> del pulsante <b>cmdAggiungi</b> dovrebbe essere qualcosa 
        del genere:</p>
      <ol start="25" class="codicevb">
        <li>Private Sub cmdAggiungiBrano_Click()</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;With udtDiscoCorrente</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.intIndice = LOF(intFileDati) 
          / Len(udtDiscoCorrente) + 1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.strTitoloBrano = 
          txtTitoloBrano.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.strAutore = txtAutoreBrano.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.strTitoloCD = txtTitoloCD.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.intTraccia = Int(txtNumeroTraccia.Text)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.intAnnoPubblicazione 
          = Int(txtAnnoPubblicazione.Text)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.strNote = txtNote.Text</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.blnEliminato = False</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Put intFileDati, .intIndice, 
          udtDiscoCorrente</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;End With</li>
        <li>End Sub</li>
      </ol>
      <p>Poich&eacute; ci saranno parecchi riferimenti alla variabile struttura 
        <b>udtDiscoCorrente</b> &egrave; pi&ugrave; efficiente e pi&ugrave; pratico 
        applicare sui suoi membri l'autoqualificazione mediante <i><b>With&nbsp;...&nbsp;End&nbsp;With</b></i>. 
        I suoi membri saranno riempiti con i valori presenti all'interno delle 
        varie caselle di testo, ad eccezione di due soli membri: <i><b>intIndice</b></i>, 
        che assumer&agrave; l'indice del record da scrivere nel file, nella maniera 
        vista precedentemente (<i>LOF(intFileDati) / Len(udtDiscoCorrente) + 1</i>) 
        e <i><b>blnEliminato</b></i> che ovviamente assumer&agrave; il valore 
        False per i record appena inseriti.</p>
      <p>Una volta riempita la variabile <b>udtDiscoCorrente</b> sar&agrave; opportuno 
        scriverla sul file mediante l'istruzione Put. Il secondo argomento dell'istruzione 
        (<b>&lt;posizione&gt;</b>) l'abbiamo gi&agrave; ricavato alla riga&nbsp;27.</p>
      <p><a name="STEP5"></a>Prima di concludere rimane solo un breve punto da 
        sciogliere: le istruzioni e le funzioni basate sul numero di file, quali 
        Open, Close, Put e LOF, utilizzano un sistema un po' contorto; riprendiamo 
        ad esempio la sintassi dell'istruzione Put:</p>
      <p class="codicevb2">Put [#]<b>&lt;numerofile&gt;</b>, [<b>&lt;posizione&gt;</b>], 
        <b>&lt;dati&gt;</b></p>
      <p>Quel simbolo # infatti &egrave; opzionale e la sua presenza non determina 
        alcuna differenza di comportamento. La stessa regola vale anche per altre 
        <b>istruzioni</b> che utilizzano i numeri di file (Open, Close, Put, Get 
        e Seek): il simbolo # pu&ograve; essere omesso tranquillamente.</p>
      <p>In maniera opposta, non tutte le <b>funzioni</b> che utilizzano i numeri 
        di files gradiscono la presenza del simbolo # ed in alcuni casi generano 
        un errore. Sembrerebbe quindi comportamento normale ignorare la presenza 
        del simbolo # ed ometterlo sia nelle istruzioni che nelle funzioni.</p>
      <p>Purtroppo non &egrave; cos&igrave; semplice: esistono ancora 3 singole 
        <b class="sottolineato">istruzioni</b> che si comportano in maniera irregolare. 
        Si tratta delle istruzioni <b>Print</b>, <b>Write</b> ed <b>Input</b>, 
        che per accedere al numero di file specificato pretendono che esso sia 
        preceduto dal simbolo #, in netto contrasto con tutte le altre istruzioni 
        di accesso ai files. Per tale ragione le tre suddette istruzioni sono 
        solitamente chiamate <b>Print&nbsp;#</b>, <b>Write&nbsp;#</b> ed <b>Input&nbsp;#</b>, 
        facendo risaltare il simbolo # che deve precedere il numero di file.</p>
      <p>Non sorgano quindi dubbi quando una funzione o un'istruzione del genere 
        usa far precedere dal simbolo # il numero del file cui si riferisce. In 
        conclusione, si tratta di un comportamento decisamente sgradevole... <img src="../images/smiley/angry.gif" width="15" height="15" align="absmiddle"><br>
        <br>
      </p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" -->
      <p>Fino a questo punto il progetto sviluppato, al suo avvio inizializza 
        le propriet&agrave; dei controlli ed apre il file BRANI.DAT; alla pressione 
        del pulsante <b>cmdAggiungi</b> salva sul file tutto ci&ograve; che trova 
        nelle varie caselle di testo, senza effettuare alcuna verifica; alla chiusura 
        del form &egrave; chiuso anche il file precedentemente aperto.</p>
      <p>Vedremo con la prossima lezione come rileggere i dati salvati su file 
        e gestirne il funzionamento collegato ai controlli.</p>
      <!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI </a><br>
        26 Gennaio 2003<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
     </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><!-- #BeginEditable "LEZIONEPREC" --><a href="int_05.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna alla quinta lezione</a><!-- #EndEditable --></td>
    <td align="right"><!-- #BeginEditable "LEZIONESUCC" --><a href="int_07.htm">Vai 
      alla settima lezione <img src="../images/vbnext.jpg" width="49" height="32" align="absmiddle" border="0"></a><!-- #EndEditable --></td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
