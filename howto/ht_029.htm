<html><!-- #BeginTemplate "/Templates/HowTo.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Invertire una stringa</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo"><!-- #BeginEditable "TITOLO" -->Invertire una stringa<!-- #EndEditable --> 
    <!-- #BeginEditable "API" --><img src="../images/api.gif" width="34" height="24" align="absmiddle"><!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/howto.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</a></td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"> 
      <table width="100%"><tr><td align="left" nowrap><style type="text/css">
@import url(http://www.google.com/cse/api/branding.css);
</style>
<div class="cse-branding-right" style="background-color:#FFFFFF;color:#000000">
  <div class="cse-branding-form">
    <form action="http://www.google.it/cse" id="cse-search-box">
      <div>
        <input type="hidden" name="cx" value="partner-pub-8218922773694577:rv2o52-qh5a" />
        <input type="hidden" name="ie" value="ISO-8859-1" />
        <input type="text" name="q" size="20" />
        <input type="submit" name="sa" value="Cerca" />
      </div>
    </form>
  </div>
  <div class="cse-branding-logo">
    <img src="http://www.google.com/images/poweredby_transparent/poweredby_FFFFFF.gif" alt="Google" />
  </div>
  <div class="cse-branding-text">
    Ricerca personalizzata
  </div>
</div></td><td align="right">
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><!-- #BeginEditable "DIFFICOLTA" --><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"> 
        2<!-- #EndEditable --> / 5</p>
</td></tr></table>
      <script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" --> 
      <ul>
        <li><a href="ht_029.htm#STEP1">Prima versione (lenta, senza l'utilizzo 
          dell'API)</a></li>
        <li><a href="ht_029.htm#STEP2">Seconda versione (lenta, senza l'utilizzo 
          dell'API)</a></li>
        <li><a href="ht_029.htm#STEP3">Terza versione (veloce, con l'utilizzo 
          dell'API)</a> <img src="../images/api.gif" width="34" height="24" align="absmiddle"></li>
        <li><a href="ht_029.htm#STEP4">Confronto tra le tre versioni</a></li>
      </ul>
      <p>In alcune situazioni pu&ograve; essere necessario invertire una stringa, 
        dal primo all'ultimo carattere. Il suo scopo si rivela utile nelle operazioni 
        di ricerca partendo dalla fine. Ben lo sapevano i programmatori della 
        <a href="../glossary/m.htm#MICROSOFT">Microsoft</a>, tanto che dalla versione 
        6 tutte le <a href="../glossary/e.htm#EDIZIONI">edizioni di Visual Basic</a> 
        includono la funzione di inversione di una stringa chiamata <b>StrReverse</b>.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Ma come sviluppare questa funzione con Visual Basic 5?<br>
        Sono proposte tre versioni: una semplicissimama ma molto lenta, una di 
        confronto con la prima, sempre lenta, ed una pi&ugrave; complessa che 
        utilizza l'<a href="../glossary/a.htm#API">API</a>, pi&ugrave; orientata 
        al linguggio C che al Visual Basic.</p>
      <hr>
      <p align="center" class="size3"><a name="STEP1"></a>Prima versione (lenta, 
        senza l'utilizzo dell'API)</p>
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"> 
        1 / 5</p>
      <p>Per effettuare l'inversione di una stringa sar&agrave; necessario leggere 
        ogni carattere della stringa partendo dall'ultimo carattere e memorizzarlo 
        nella nuova stringa.</p>
      <p>La prima soluzione consiste nell'utiilzzare l'istruzione <i>Mid</i> per 
        estrarre un carattere partendo da una posizione specifica.</p>
      <ol class="codicevb" start="1">
        <li>Public Function SlowStrReverse(ByVal Stringa As String) As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Conta As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;For Conta = Len(Stringa) To 1 Step -1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SlowStrReverse = SlowStrReverse 
          &amp; Mid(Stringa, Conta, 1)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Next Conta</li>
        <li>End Function</li>
      </ol>
      <p>La funzione &egrave; semplicissima: il suo nome &egrave; <i><b>SlowStrReverse</b></i> 
        (ovvero StrReverse lenta) e richiede come parametro la stringa da invertire.</p>
      <p>Al suo interno abbiamo un ciclo che parte dall'ultimo carattere della 
        stringa e procede fino al primo. All'interno del ciclo viene estratto 
        di volta in volta un carattere e viene aggiunto alla stringa <i>SlowStrReverse</i>, 
        che restituir&agrave; alla fine della funzione, la stringa invertita.</p>
      <p>Questa procedura, tuttavia, risulta molto lenta perch&eacute; l'istruzione 
        <i>Mid</i>, di volta in volta, deve estrarre un carattere specifico.<br>
        Inoltre la funzione richiede che il valore (la stringa) sia <a href="../info/info_05.htm">passata 
        per valore</a>. Sembra un particolare da poco, ma ogni volta che la funzione 
        viene richiamata deve essere effettuata una copia della stringa da invertire 
        nella variabile-parametro Stringa. Ci&ograve; comporta un ulteriore rallentamento. 
        Pertanto una <a href="../info/info_05.htm">chiamata per riferimento</a> 
        risulta di fatto, in alcuni casi, nettamente pi&ugrave; veloce, poich&eacute; 
        la funzione riceve soltanto un <a href="../glossary/p.htm#PUNTATORE">puntatore</a> 
        e non una copia della stringa da invertire.<br>
        Per ulteriori informazioni consultare la sezione <a href="../info/info_05.htm">Informazioni 
        aggiuntive sulle funzioni</a>.</p>
      <hr>
      <p align="center" class="size3"><a name="STEP2"></a>Seconda versione (lenta, 
        senza l'utilizzo dell'API)</p>
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"> 
        1 / 5</p>
      <p>Questa seconda versione rappresenta una variante della versione precedente, 
        a dimostrare l'inefficienza del metodo risultivo. Questa funzione si differenzia 
        dalla precedente per il fatto che ogni volta che un carattere viene estratto 
        dalla stringa, viene di fatto eliminato dalla stringa originale.</p>
      <ol class="codicevb" start="1">
        <li>Public Function Slow2StrReverse(ByVal Stringa As String) As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;While Len(Stringa) &gt; 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Slow2StrReverse = 
          Slow2StrReverse &amp; Right(Stringa, 1)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stringa = Left(Stringa, 
          Len(Stringa) - 1)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Wend</li>
        <li>End Function</li>
      </ol>
      <p>Alla riga 3 viene estratto l'ultimo carattere della stringa ed alla riga 
        esso stesso viene eliminato, cosicch&egrave; ogni volta la stringa diventi 
        sempre pi&ugrave; corta.</p>
      <p>Apparentemente potrebbe sembrare un'ottimizzazione del metodo precedente 
        in quanto la stringa da trattare diventa regolarmente pi&ugrave; breve; 
        ma in realt&agrave; non &egrave; affatto cos&igrave;.<br>
        Per spiegare questo bisogna risalire al linguaggio C con cui l'ambiente 
        e il compilatore di Visual Basic sono scritti.</p>
      <p>In linguaggio C le stringhe sono memorizzate come <a href="../glossary/v.htm#VETTORE">vettori</a> 
        di caratteri, ed i riferimenti ai vettori sono <a href="../glossary/p.htm#PUNTATORE">puntatori</a>. 
        Pertanto per il compilatore, estrarre il carattere in posizione n anzich&eacute; 
        m &egrave; esattamente la stessa cosa; infatti la richiesta di estrarre 
        un carattere dalla posizione n si trasforma in una richiesta di lettura 
        dall'area di memoria x, senza che il compilatore di fatto debba analizzare 
        tutta la stringa.</p>
      <p>Pertanto l'operazione di accorciamento della stringa si trasforma in 
        un ciclo inutile che rallenta ulteriormente l'operazione di inversione 
        della stringa.<br>
        Altres&igrave; non sar&agrave; possibile effettuare la chiamata alla funzione 
        per riferimento, in quanto essa lavora direttamente sul parametro Stringa. 
        L'utilizzare la chiamata ByRef opera la distruzione dei dati all'uscita 
        della funzione di inversione.</p>
      <p>Le due versioni saranno paragonate pi&ugrave; avanti, ma le motivazioni 
        appena accennate, da sole, dovrebbero bastare a dimostrare che conoscere 
        il funzionamento delle stringhe nel linguaggio C pu&ograve; di fatto, 
        evitare inutili rallentamenti.</p>
      <hr>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p align="center" class="size3"><a name="STEP3"></a>Terza versione (veloce, 
        con l'utilizzo dell'API) <img src="../images/api.gif" width="34" height="24" align="absmiddle"></p>
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level3.gif" width="17" height="18" align="absmiddle"> 
        3 / 5</p>
      <p>L'ultima versione che vedremo sar&agrave; la pi&ugrave; efficiente, sia 
        perch&eacute; utilizzeremo funzioni <a href="../glossary/a.htm#API">API</a>, 
        notoriamente pi&ugrave; veloci delle funzioni fornite dal linguaggio Visual 
        Basic, sia perch&eacute; riporteremo le stringhe al loro stato naturale, 
        ovvero <a href="../glossary/v.htm#VETTORE">vettori</a> di caratteri.</p>
      <p>Il codice che sembra assomiglia molto ad una soluzione di linguaggio 
        C anzich&eacute; di Visual Basic, ma si dimostra estremamente efficiente.</p>
      <ol class="codicevb" start="1">
        <li>Private Declare Sub CopyMemory Lib &quot;kernel32&quot; Alias &quot;RtlMoveMemory&quot; 
          (pDst As Any, pSrc As Any, ByVal ByteLen As Long)</li>
        <li></li>
        <li>Public Function FastStrReverse(ByVal Stringa As String) As String</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Buffer1() As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Buffer2() As Byte</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Conta1 As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Conta2 As Integer</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Conta1 = Len(Stringa)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;ReDim Buffer1(Conta1)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;ReDim Buffer2(Conta1 - 1)</li>
      </ol>
      <p>La funzione si chiamer&agrave; <i><b>FastStrReverse</b></i> (StrReverse 
        veloce).<br>
        Il <a href="../info/info_04.htm">tipo di dati</a> che meglio rappresenta 
        i caratteri &egrave; il semplice Byte. In questa funzione sfrutteremo 
        il fatto che le operazioni su un singolo numero sono molto pi&ugrave; 
        veloci delle operazioni effettuate sopra un stringa. Infatti in linguaggio 
        C ogni stringa, anche di un solo carattere, deve contenere un codice ASCII 
        0 che identifica la sua fine. Quindi l'estrazione di un solo carattere 
        da una stringa comporta oltre alla ricerca della posizione, anche l'<a href="../glossary/a.htm#ALLOCARE">allocazione</a> 
        di un'area di memoria per la stringa e la copia della stringa in tale 
        area.</p>
      <p>La funzione utilizza una funzione API di nome <i>RtlMoveMemory</i>, ma 
        ridefinita da molti, per comodit&agrave;, <b>CopyMemory</b>. Essa richiede 
        tre parametri: un puntatore all'area di memoria di destinazione (<i>pDst</i>), 
        uno all'area di partenza da cui leggere (<i>pSrc</i>) ed un valore indicante 
        il numero di bytes da copiare (<i>ByteLen</i>).<br>
        Questa funzione lavora direttamente sulla memoria, ignorando di fatto 
        i tipi di dati, i limiti e la congruenza d'essi. Ci&ograve; comporta quindi 
        notevoli rischi in caso di errori di calcolo.</p>
      <p>Alle righe 4 e 5 abbiamo dichiarato due vettori di caratteri (Byte) senza 
        dimensione fissa, di nome <b>Buffer1</b> e <b>Buffer2</b>. Essi serviranno 
        per contenere i dati della stringa da invertire e lavoreremo sopra d'essi 
        anzich&eacute; sopra le stringhe.<br>
        La dimensione dei vettori viene determinata in fase di esecuzione mediante 
        l'istruzione <i>Redim</i>. Questo evita di dichiarare vettori troppo grandi 
        o troppo piccoli per contenere i dati della stringa da invertire.</p>
      <p>Nota per&ograve; che il secondo vettore &egrave; di un carattere pi&ugrave; 
        piccolo del primo vettore. Questo perch&eacute; la funzione API lavora 
        con le convenzioni C che richiedono alla fine un codice ASCII 0 di terminazione.</p>
      <ol class="codicevb" start="11">
        <li>&nbsp;&nbsp;&nbsp;&nbsp;CopyMemory Buffer1(0), ByVal Stringa, Conta1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Conta2 = 0</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;For Conta1 = Conta1 - 1 To 0 Step -1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Buffer2(Conta2) = 
          Buffer1(Conta1)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Conta2 = Conta2 + 
          1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Next Conta1</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;FastStrReverse = StrConv(Buffer2, vbUnicode)</li>
        <li>End Function</li>
      </ol>
      <p>Alla riga 11 abbiamo la chiamata alla funzione <i>CopyMemory</i>. Essa 
        copier&agrave; i dati da Stringa al vettore Buffer1. La dimensione del 
        buffer da copiare &egrave; indicata in Conta1.<br>
        Nota che la funzione richiede che sia passato come primo argomento un 
        valore, non una matrice; pertanto dovremo utilizzare come indirizzo di 
        destinazione il primo valore del vettore.</p>
      <p>Mediante quest'operazione, potremo richiamare i caratteri della stringa 
        direttamente senza utilizzare l'istruzione <i>Mid</i> e l'elaborazione 
        lavorer&agrave; su numeri interi, anzich&eacute; su stringhe.</p>
      <p>Nel ciclo alle righe 13-16 effettueremo l'estrazione di un valore dal 
        primo vettore e lo inseriremo nel secondo vettore. Quest'operazione risulta 
        particolarmente veloce poich&eacute; non sono necessarie <a href="../glossary/a.htm#ALLOCARE">allocazioni</a> 
        di memoria temporanee.</p>
      <p>Cos&igrave;, all'uscita dal ciclo, il vettore Buffer2 conterr&agrave; 
        la nostra stringa invertita, ma in formato <a href="../glossary/a.htm#ANSI">ANSI</a> 
        invece che <a href="../glossary/u.htm#UNICODE">UNICODE</a>. Si rende pertanto 
        necessaria un'ultima conversione di formato prima della restituzione del 
        risultato finale (riga 17).</p>
      <hr>
      <p align="center" class="size3"><a name="STEP4"></a>Confronto tra le tre 
        versioni</p>
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"> 
        1 / 5</p>
      <p>La prova delle tre versioni verr&agrave; effettuata mediante cronometrazione 
        di un certo numero di inversioni di una stringa a scelta dell'utente.</p>
      <p><img src="../images/howto/howto029_01.jpg" width="285" height="100" align="right" alt="Figura 1">Inseriamo 
        sopra un form una <i>TextBox</i><img src="../images/controls/textbox.gif" width="25" height="25" align="absmiddle">di 
        nome Testo con il testo <i><b>&quot;Stringa da invertire&quot;</b></i> 
        ed una <i>TextBox</i><img src="../images/controls/textbox.gif" width="25" height="25" align="absmiddle">di 
        nome Ripetizioni con il testo <i><b>&quot;5000&quot;</b></i>.</p>
      <p>Inseriamo anche una matrice di <i>CommandButton</i><img src="../images/controls/commandbutton.gif" width="25" height="25" align="absmiddle">di 
        nome <b>Inverti</b>, con indici da 0 a 2. Le caption dei tre pulsanti 
        sono: <i><b>&quot;Inverti (Lento)&quot;</b></i>, <i><b>&quot;Inverti (Lento 
        2)&quot;</b></i> e <i><b>&quot;Inverti (Veloce)&quot;</b></i>. Aggiungiamo 
        anche una <i>Label</i><img src="../images/controls/label.gif" width="25" height="25" align="absmiddle">di 
        nome <b>TempoImpiegato</b>.</p>
      <p>Tutto il codice si riassume in una sola routine (sono naturalmente escluse 
        le tre funzioni viste in precedenza):</p>
      <ol class="codicevb" start="1">
        <li>Private Declare Function GetTickCount Lib &quot;kernel32&quot; () 
          As Long</li>
        <li></li>
        <li>Private Sub Inverti_Click(Index As Integer)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Tempo As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Conta As Long</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Dim Risultato As String</li>
        <li></li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Tempo = GetTickCount</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;For Conta = 1 To Val(Ripetizioni.Text)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Select Case Index</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 
          0: Risultato = SlowStrReverse(Testo.Text)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 
          1: Risultato = Slow2StrReverse(Testo.Text)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 
          2: Risultato = FastStrReverse(Testo.Text)</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End Select</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Next Conta</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Tempo = GetTickCount - Tempo</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;TempoImpiegato.Caption = &quot;Tempo Impiegato: 
          &quot; &amp; CStr(Tempo) &amp; &quot; msec&quot;</li>
        <li>&nbsp;&nbsp;&nbsp;&nbsp;Me.Caption = Risultato</li>
        <li>End Sub</li>
      </ol>
      <p>Alla prima riga abbiamo dichiarato la funzione API GetTickCount che restituisce 
        il <a href="ht_019.htm">numero di millisecondi trascorsi dall'avvio di 
        Windows</a>. Essa ci servir&agrave; come cronometro per testare la velocit&agrave; 
        delle tre funzioni.</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Nella routine che gestisce l'<a href="../glossary/e.htm#EVENTO">evento</a><img src="../images/ide/evento.gif" width="16" height="16" align="absmiddle">Click 
        sopra i tre pulsanti, inseriremo il nostro codice cronometrato. Abbiamo 
        dichiarato la variabile <b>Tempo</b> che servir&agrave; per effettuare 
        i tempi di calcolo delle funzioni; la variabile <b>Conta</b> servir&agrave; 
        per eseguire pi&ugrave; volte le funzioni di inversione di stringa; infine 
        la variabile <b>Risultato</b> conterr&agrave; la stringa invertita.</p>
      <p>Alla riga 8 viene letto il tempo iniziale dalla pressione del pulsante. 
        Segue un ciclo che si ripete tante volte quanto il numero scritto nella 
        casella di testo <b>Ripetizioni</b>. All'interno di tale ciclo sar&agrave; 
        necessario controllare quale pulsante &egrave; stato premuto, mediante 
        controllo del parametro <i>Index</i>. Ad ogni tasto premuto corrisponder&agrave; 
        una funzione di inversione.<br>
        Il testo da invertire &egrave; specificato nella propriet&agrave; Text 
        della casella <b>Testo</b>.</p>
      <p>Solo dopo che la funzione &egrave; stata richiamata il numero di volte 
        richiesto, la funzione potr&agrave; terminare, ma prima verr&agrave; calcolato 
        il tempo di elaborazione (riga 16) ed esso sar&agrave; mostrato nella 
        Label <b>TempoImpiegato</b> (riga 17).</p>
      <p>In chiusura della funzione, sar&agrave; cambiata la Caption del form 
        con il risultato dell'inversione.</p>
      <p><img src="../images/howto/howto029_02.jpg" width="285" height="100" align="right" alt="Figura 2">Come 
        gi&agrave; anticipato, la funzione pi&ugrave; veloce &egrave; la terza 
        (<i>FastStrReverse</i>), mentre si dimostra pi&ugrave; lenta la seconda 
        versione (<i>Slow2StrReverse</i>).<br>
        <br>
      </p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --> 
      <p>Comunque, la vera velocit&agrave; della terza versione si dimostra nelle 
        richieste di inversioni di stringhe superiori a 20 caratteri.</p>
      <p>In questo esempio, &egrave; vano richiedere che il parametro Stringa 
        per la prima funzione (<i>SlowStrReverse</i>) sia passato per riferimento, 
        anzich&eacute; per valore, in quanto non &egrave; possibile passare una 
        propriet&agrave; di un'oggetto per riferimento.</p>
      <!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI</a><br>
        21 Febbraio 2001<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaZIP();"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><a href="index.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna all'indice degli HowTo</a></td>
    <td align="right">&nbsp;</td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
