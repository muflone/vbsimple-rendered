<html><!-- #BeginTemplate "/Templates/Database2.dwt" -->
<head>
<script language="JavaScript" src="../funzioni.js"></script>
<script language="JavaScript" src="../scroller.js"></script>
<!-- #BeginEditable "doctitle" --> 
<title>Il linguaggio SQL (la clausola WHERE)</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../stili.css" rel="stylesheet" type="text/css" title="stili">
<link href="../codicevb.css" rel="stylesheet" type="text/css" title="codicevb">
<link href="../colori.css" rel="stylesheet" type="text/css" title="colori">
<meta name="description" content="Visual Basic Simple &egrave; l'unico sito in Italia che tratta la programmazione in Visual Basic in un'ottica mai vista prima d'ora. Tutti gli articoli sono spiegati passo dopo passo ed in una maniera davvero semplice per consentire a tutti di comprendere gli argomenti trattati.">
<meta name="keywords" content="VB, Visual, Basic, Simple, programmazione, codici, esempi, manuali, studio, sviluppo, ActiveX, OCX, articoli, notizie, apprendere, QBasic, API, COM, database">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
  <tr>
    <td width="400" align="left" bgcolor="#FFFFFF"><img src="../images/vbslogo.jpg" width="400" height="80" border="0" alt="Visual Basic Simple"></td>
    <td width="100%" align="right" bgcolor="#FFFFFF"> 
      <div class="intestazioni"><a href="../home.htm">Home Page</a> <a href="../home.htm"><img src="../images/icons/dothome.gif" align="absmiddle" border="0" alt="Home Page" width="25" height="25"></a><br>
        <a href="../history.htm">Novit&agrave;</a> <a href="../history.htm"><img src="../images/icons/dotinfo.gif" align="absmiddle" border="0" alt="Informazioni su VB Simple" width="25" height="25"></a><br>
        <a href="../help.htm">Aiuto</a> <a href="../help.htm"><img src="../images/icons/dothelp.gif" align="absmiddle" border="0" alt="Hai bisogno d'aiuto?" width="25" height="25"></a></div>
    </td>
    <td width="160" align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 160x90, creato 02/02/09 */
google_ad_slot = "8970907891";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
  </tr>
</table>

<div align="center"> 
  <div class="titolo"><!-- #BeginEditable "TITOLO" -->Il linguaggio SQL<br>
    La clausola WHERE<!-- #EndEditable --></div>
  <script language="Javascript">NomePagina();</script>
  <table width="80%" border="1" cellspacing="1" cellpadding="3" bordercolorlight="#000000" bordercolordark="#000000" class="dontprint">
    <tr class="size0"> 
      <td align="center" width="25%"><a href="../ftv21/database.htm" target="treeframe"><img src="../images/icons/search%20window.gif" width="16" height="16" border="0" alt="Sincronizza Indice"><br>
        Sincronizza Indice</a></td>
      <td align="center" width="25%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
        Scarica il progetto</td>
      <td align="center" width="25%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
        Testo dell'articolo</a></td>
      <td align="center" width="25%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
        Stampa l'articolo</a></td>
    </tr>
  </table>
</div>
<table width="100%" border="0">
  <tr> 
    <td width="80%"> 
      <table width="100%"><tr><td align="left" nowrap><style type="text/css">
@import url(http://www.google.com/cse/api/branding.css);
</style>
<div class="cse-branding-right" style="background-color:#FFFFFF;color:#000000">
  <div class="cse-branding-form">
    <form action="http://www.google.it/cse" id="cse-search-box">
      <div>
        <input type="hidden" name="cx" value="partner-pub-8218922773694577:rv2o52-qh5a" />
        <input type="hidden" name="ie" value="ISO-8859-1" />
        <input type="text" name="q" size="20" />
        <input type="submit" name="sa" value="Cerca" />
      </div>
    </form>
  </div>
  <div class="cse-branding-logo">
    <img src="http://www.google.com/images/poweredby_transparent/poweredby_FFFFFF.gif" alt="Google" />
  </div>
  <div class="cse-branding-text">
    Ricerca personalizzata
  </div>
</div></td><td align="right">
      <p align="right" class="size3">Difficolt&agrave;: <img src="../images/icons/level1.gif" width="17" height="18" align="absmiddle"><!-- #BeginEditable "DIFFICOLTA" --><img src="../images/icons/level2.gif" width="17" height="18" align="absmiddle"><img src="../images/icons/level3.gif" width="17" height="18" align="absmiddle"> 
        3<!-- #EndEditable --> / 5</p>
</td></tr></table>
      <script language="JavaScript">ShowArticlesScroller();</script><!-- #BeginEditable "CORPO" --> 
      <p>Sebbene si tratti di una clausola anzich&eacute; di un'istruzione ed 
        essendo utilizzata da quasi tutte le altre istruzioni si &egrave; preferito 
        trattarla a parte. La sua unica finalit&agrave; &egrave; quella di limitare 
        le selezioni ed includere solo le righe che corrispondono ai criteri specificati. 
        Il suo utilizzo generale &egrave;:</p>
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo grafica */
google_ad_slot = "0981518759";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p class="codicevb2">WHERE &lt;campo&gt; &lt;predicato&gt; &lt;valori&gt;</p>
      <p>Campo naturalmente si riferisce al nome di un campo presente in una delle 
        origini, predicato si riferisce ai simboli che stabiliscono una regola 
        ai valori specificati di seguito. Il predicato si riferisce al contenuto 
        del campo e pu&ograve; essere uno dei seguenti:</p>
      <p class="codicevb2">=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; 
        uguale al valore<br>
        &lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; 
        minore del valore<br>
        &gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; 
        maggiore del valore<br>
        &lt;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; 
        minore oppure uguale al valore<br>
        &gt;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; 
        maggiore oppure uguale al valore<br>
        &lt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; 
        differente dal valore<br>
        LIKE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; 
        similare al valore<br>
        NOT LIKE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;non &egrave; similare al valore<br>
        BETWEEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; compreso tra 
        i due valori specificato a seguito<br>
        NOT BETWEEN&nbsp;&nbsp;&nbsp;non &egrave; compreso tra i due valori<br>
        IS NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&egrave; il valore NULL<br>
        IS NOT NULL&nbsp;&nbsp;&nbsp;non &egrave; il valore NULL</p>
      <p>Alcuni database consentono l'uso di ulteriori predicati:</p>
      <p class="codicevb2">!=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;non 
        &egrave; uguale (cio&egrave; &egrave; differente) al valore<br>
        !&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;non 
        &egrave; minore (cio&egrave; &egrave; maggiore o uguale) del valore<br>
        !&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;non 
        &egrave; maggiore (cio&egrave; &egrave; minore o uguale) del valore<br>
        IN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;corrisponde 
        ad uno dei valori specificati a seguito<br>
        NOT IN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;non corrisponde 
        ad alcuno dei valori specificati a seguito</p>
    <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* Contenuti 468x60 */
google_ad_slot = "0785185013";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Prima di vedere il suo utilizzo &egrave; necessario chiarire tre semplici 
        concetti:</p>
      <p> 
      <ol>
        <li>I campi numerici vanno testati con valori numerici come 1, 2, 3 o 
          40000.</li>
        <li>I campi di testo vanno verificati con valori di testo, quindi stringhe 
          racchiuse dal carattere di apostrofo come 'pippo', 'ciccio' o 'casa&nbsp;mia'. 
          La regola comune stabilisce che le ricerche su campi di testo sono effettuate 
          ignorando le differenze tra maiuscolo e minuscolo (<i>case insensitive</i>).</li>
        <li>Gli altri tipi di campo (data, caratteri unicode, o altro genere) 
          vanno verificati con i simboli decisi dal singolo driver del database.</li>
      </ol>
      <p></p>
      <p>L'utilizzo dell'operatore WHERE &egrave; relativamente semplice:</p>
      <p class="codicevb2">SELECT nome, cognome FROM dipendenti WHERE id &gt; 
        2</p>
      <p>Restituir&agrave; due campi di quelle righe in cui il campo ID contiene 
        un valore superiore a 2. Come si nota, il campo specificato nell'operatore 
        WHERE non deve necessariamente essere presente nell'elenco dei campi restituiti.</p>
      <p class="codicevb2">SELECT nome, cognome FROM dipendenti WHERE id BETWEEN 
        2 AND 4</p>
      <p>Restituir&agrave; i due campi di quelle righe in cui il campo ID contiene 
        un valore compreso tra 2 e 4.</p>
      <p class="codicevb2">SELECT nome, cognome FROM dipendenti WHERE ruolo LIKE 
        'direttore%'</p>
      <p>Restituir&agrave; quelle righe in cui il valore del campo RUOLO inizia 
        per DIRETTORE.<br>
        Il carattere di percentuale % corrisponde al <a href="../glossary/c.htm#CARATTERIJOLLY">carattere 
        jolly</a> standard che indica qualsiasi corrispondenza al suo posto. Il 
        carattere % pu&ograve; essere utilizzato soltanto come prefisso o come 
        suffisso o entrambe le cose; non va invece utilizzato al centro di una 
        frase:</p>
      <ol>
        <li class="codicevb">SELECT nome, cognome FROM dipendenti WHERE ruolo 
          LIKE 'direttore%'</li>
        <li class="codicevb"> SELECT nome, cognome FROM dipendenti WHERE ruolo 
          LIKE '%direttore'</li>
        <li class="codicevb"> SELECT nome, cognome FROM dipendenti WHERE ruolo 
          LIKE '%direttore%'</li>
      </ol>
      <p>Le tre istruzioni restituiscono rispettivamente le righe in cui il campo 
        RUOLO:</p>
      <ol>
        <li>inizia per DIRETTORE, e cio&eacute; &egrave; seguito da qualsiasi 
          altra combinazione di caratteri;</li>
        <li>termina per DIRETTORE, e cio&eacute; &egrave; preceduto da qualsiasi 
          combinazione di caratteri;</li>
        <li>include il termine DIRETTORE, e cio&eacute; &egrave; preceduto o seguito 
          da qualsiasi altro carattere.</li>
      </ol>
      <p>Esiste un altro carattere jolly che indica invece un singolo carattere, 
        &egrave; rappresentato dal simbolo _ e pu&ograve; essere utilizzato sia 
        come prefisso, come suffisso che inframezzato al testo:</p>
      <ol>
        <li class="codicevb">SELECT nome, cognome FROM dipendenti WHERE nome LIKE 
          'francesc_'</li>
        <li class="codicevb">SELECT nome, cognome FROM dipendenti WHERE nome LIKE 
          '_ino'</li>
        <li class="codicevb">SELECT nome, cognome FROM dipendenti WHERE nome LIKE 
          'gianpier_ ca_ill%'</li>
        <li class="codicevb">SELECT nome, cognome FROM dipendenti WHERE nome LIKE 
          '_____'</li>
      </ol>
      <p>Restituiranno rispettivamente le righe in cui il campo NOME:</p>
      <ol>
        <li>inizia per FRANCESC, quindi include sia Francesco che Francesca, ma 
          non Franceschino;</li>
        <li>termina per INO, quindi include Gino, Pino e Lino, ma non Paperino;</li>
        <li>inizia per <b>GIAMPIER</b>, seguito da un carattere, da uno <b>spazio</b>, 
          da <b>CA</b>, un altro carattere qualsiasi, da <b>ILL</b> e qualsiasi 
          altra combinazione; include quindi Gianpiero Camilli, Gianpiera Carillo 
          o Gianpiero Cavillosi.</li>
        <li>contiene esattamente 5 caratteri qualsiasi, non quattro n&eacute; 
          sei n&eacute; otto.</li>
      </ol>
      <p>&Egrave; fondamentale capire la differenza tra i due caratteri jolly:</p>
      <ul>
        <li>il simbolo _ indica un solo carattere qualsiasi;</li>
        <li>il simbolo % indica qualsiasi combinazione di qualsiasi carattere.</li>
      </ul>
      <p><!-- #BeginLibraryItem "/Library/Notes2.lbi" --><img src="../images/notes2.gif" width="31" height="32" align="left"><!-- #EndLibraryItem -->Alcune 
        versioni del driver per il <b>database Access</b> utilizzano i caratteri 
        jolly standard del DOS, cio&egrave; ? al posto di _ per indicare un carattere 
        qualunque e * al posto di % per indicare una combinazione composta da 
        qualsiasi carattere.</p>
      <hr class="hrseparator">
      <p>Abbiamo sinora visto solo selezioni formate da un'unica condizione di 
        vincolo ma naturalmente &egrave; possibile combinare pi&ugrave; condizioni 
        utilizzando gli appositi operatori booleani:</p>
      <p class="codicevb2">AND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifica che 
        il criterio precedente e quello successivo debbano restituire risultato 
        Vero<br>
        OR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifica che almeno uno dei 
        due criteri debba restituire risultato Vero </p>
      <p>Altres&igrave; ogni condizione pu&ograve; essere invertita utilizzando 
        l'operatore NOT. Vediamone il funzionamento pratico:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE nome='francesco' AND 
        ruolo='direttore'</p>
      <p>Restituir&agrave; tutti i campi della tabella dipendenti in cui il nome 
        dell'impiegato &egrave; Francesco ed il suo ruolo &egrave; direttore. 
        Sono esclusi tutti gli altri Francesco, tutti gli altri direttori e tutti 
        quei dipendenti che presentano nome o ruolo differenti.</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id=0 OR id &gt; 10</p>
      <p>Restituir&agrave; tutti i campi della tabella dipendenti in cui il campo 
        ID contiene valore 0 oppure un valore superiore a 10. Sono quindi esclusi 
        tutti quelli che vanno da 1 a 9 (supposto naturalmente che ID sia un campo 
        intero). Complicando un attimo le cose otteniamo:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id=0 OR id=1 OR id &gt; 
        10</p>
      <p>Restituir&agrave; tutte le righe in cui il campo ID sia uguale a 0 oppure 
        a 1 oppure sia maggiore di 10.</p>
      <p>Nel caso in cui appaiano i due operatori AND e OR nella stessa condizione, 
        l'operatore AND avr&agrave; la precedenza su OR:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id=0 OR id=5 AND id 
        BETWEEN 4 AND 10</p>
      <p>Restituir&agrave; quelle righe in cui il valore ID &egrave; 0 oppure 
        &egrave; 5 e compreso tra 4 e 10. Se nella tabella dipendenti avessimo 
        20 righe, con ID da 0 a 19, la selezione sopra <b>riporterebbe</b> due 
        sole righe, <b>quelle con ID 0 e ID 5</b>. Questo perch&eacute; l'interprete 
        SQL legge il testo cos&igrave;:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE<br>
        id=0 OR<br>
        (id=5 AND id BETWEEN 4 AND 10)</p>
      <p>che viene quindi calcolata in due parti: &egrave; estratto il valore 
        5, &egrave; posto a paragone con l'ultima condizione che estrae le righe 
        con ID compresi tra 4 e 10. Queste due condizioni separate restituiscono 
        soltanto una riga, cio&egrave; la 5. I valori 4, 6, 7, 8, 9 e 10 sono 
        scartati perch&eacute; esclusi dall'operatore AND. Alla fine dell'espressione 
        sono quindi restituite le righe con ID 0 e 5. Volendo forzare invece l'altro 
        ragionamento &egrave; possibile riscrivere il codice come segue:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE<br>
        (id=0 OR id=5) AND<br>
        id BETWEEN 4 AND 10</p>
      <p>Cos&igrave; facendo <b>sar&agrave; estratta soltanto la riga con ID 5</b> 
        perch&eacute; la prima valutazione estrarr&agrave; le due righe con ID 
        0 e 5 e queste saranno poste a confronto con la condizione per cui ID 
        sia un numero compreso tra 4 e 10. Dei due numeri estratti in precedenza 
        soltanto l'ultimo ricade in questa ipotesi.</p>
      <hr class="hrseparator">
      <p align="center"><script type="text/javascript"><!--
google_ad_client = "pub-8218922773694577";
/* 468x60 solo testo */
google_ad_slot = "6726967947";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></p>
      <p>Riprendendo il discorso <a href="db_08.htm">fatto in precedenza</a> riguardo 
        i valori <a href="../glossary/n.htm#NULL">Null</a>, &egrave; possibile 
        estrarre le righe in cui un determinato campo sia Null usando l'operatore 
        IS NULL come mostrato:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id IS NULL</p>
      <p>Restituir&agrave; soltanto quelle righe in cui il campo ID sia Null. 
        Viceversa:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id IS NOT NULL</p>
      <p>Riporter&agrave; tutte quelle righe in cui ID non sia Null.</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id=0 OR id&lt;&gt;0</p>
      <p>Per assurdo, l'ultima interrogazione produce lo stesso risultato di quella 
        basata su IS NOT NULL, perch&egrave; lo ricordiamo, tutti i test matematici 
        su un valore Null restituiscono valore Null, che non corrisponde quindi 
        n&eacute; a 0 n&eacute; ad un valore differente da 0. In maniera analoga 
        tutte le altre operazioni (addizione, moltiplicazione, etc..) su valori 
        Null continuano a restituire il valore di origine.</p>
      <p>Volendo fare un paragone con un concetto a noi gi&agrave; noto, si tratta 
        di un valore che corrisponde ad un infinito senza segno, verso il quale 
        qualsiasi operazione restituisce infinito.</p>
      <hr class="hrseparator">
      <p>Abbiamo gi&agrave; detto che alcuni database supportano anche il <b>predicato 
        IN</b> ed il suo contrario <b>NOT IN</b>; questi possono essere usati 
        in due maniere:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id IN (1, 3, 5, 7, 9)</p>
      <p>Interrogazione restituir&agrave; tutte quelle righe in cui il campo ID 
        contiene i valori 1 o 3 o 5 o 7 o 9. Corrisponde esattamente a:</p>
      <p class="codicevb2">SELECT * FROM dipendenti WHERE id=1 OR id=3 OR id=5 
        OR id=7 OR id=9</p>
      <p>La sua reale utilit&agrave; si vede quando &egrave; impiegato in analisi 
        composte da pi&ugrave; di un'interrogazione:</p>
      <p class="codicevb2">SELECT nome, cognome FROM dipendenti WHERE id IN (SELECT 
        id FROM saldi WHERE totale &gt; 10000)</p>
      <p>Restituir&agrave; nome e cognome dalla tabella dipendenti di quelle righe 
        il cui ID sia incluso nella seconda interrogazione, che estrarr&agrave; 
        gli ID della tabella saldi in cui il campo totale &egrave; maggiore di 
        10000. Questa doppia interrogazione produrr&agrave; quindi il nome ed 
        il cognome di quelle persone con un saldo superiore a 10000.</p>
      <p>Si tratta di un'istruzione molto comoda che a volte pu&ograve; semplificare 
        l'uso due tabelle contemporaneamente, ponendo infatti due interrogazioni 
        separate, anzich&eacute; una sola contenente due tabelle, e quindi pi&ugrave; 
        complessa. Purtroppo non &egrave; supportato da tutti i database.</p>
      <hr class="hrseparator">
      <p>Abbiamo parlato di pi&ugrave; tabelle in una singola interrogazione? 
        Abbiamo gi&agrave; visto come funziona la cosa e gli effetti che produce, 
        cio&egrave; la ripetizione di tutti i valori di ogni singola tabella con 
        qualsiasi altro valore dell'altra tabella. Vediamo quindi come semplificare 
        e rendere utile queste relazioni tra pi&ugrave; tabelle.</p>
      <p>Immaginiamo di avere la solita tabella dipendenti composta dai campi 
        ID, Nome, Cognome e Ruolo; immaginiamo anche la presenza di una seconda 
        tabella di nome saldi con i campi ID e Totale, che abbiamo gi&agrave; 
        visto nell'esempio precedente. Riproduciamo l'esempio che estraeva nome 
        e cognome delle persone con un saldo totale maggiore di 10000, utilizzando 
        un'unica interrogazione basata su due tabelle, anzich&eacute; l'operatore 
        IN che non tutti i database supportano. In questa interrogazione aggiungeremo 
        anche il campo con il valore totale della tabella saldi, operazione impossibile 
        con l'esempio precedente.</p>
      <p class="codicevb2">SELECT dip.id, dip.nome, dip.cognome, s.totale<br>
        FROM dipendenti dip, saldi s<br>
        WHERE an.id=s.id<br>
        AND s.totale > 10000</p>
      <p>Dovendo mettere pi&ugrave; tabelle in relazione, ed avendo pi&ugrave; 
        di una tabella il campo di nome ID abbiamo preferito includere anche i 
        prefissi delle tabelle, rinominandoli per comodit&agrave; <b>dip</b> per 
        dipendenti e <b>s</b> per saldi. Abbiamo gi&agrave; visto questa tecnica 
        nell'articolo precedente.</p>
      <p>L'unione delle due tabelle produrr&agrave; la duplicazione di tutti i 
        valori della prima tabella con quelli della seconda. Per escludere i risultati 
        che non sono reali baster&agrave; unire i due campi chiave id in un vincolo: 
        <b>an.id=s.id</b>, cio&egrave; tutti i valori del campo ID devono essere 
        uguali ai corrispondenti nella tabella saldi. La seconda delle condizioni 
        filtrer&agrave; semplicemente le righe ottenute in cui il totale non sia 
        maggiore di 10000.</p>
      <p>Nel gergo tecnico dei database il campo ID della tabella dipendenti costituisce 
        la chiave primaria (Primary Key o semplicemente PK), mentre il campo ID 
        della tabella saldi costituisce la chiave esterna (Foreign Key oppure 
        FK). La relazione formata &egrave; una semplice relazione uno a uno. Abbiamo 
        gi&agrave; trattato questi argomenti nell'<a href="db_01.htm">introduzione 
        ai database</a>.</p>
      <p>La stessa operazione di relazione di due tabelle pu&ograve; essere effettuata 
        utilizzando l'<a href="db_08_09.htm">operatore JOIN</a>, nelle sue numerose 
        forme, in grado di superare alcune limitazioni che questa implementazione 
        possiede.<br>
        <br>
      </p>
      <!-- #EndEditable --></td>
  </tr>
</table>

<table width="100%">
  <tr> 
    <td><!-- #BeginEditable "FINALE" --><!-- #EndEditable -->
      <p align="right" class="credits2"><!-- #BeginEditable "CREDITS" --><a href="../vbmail.htm?id=1">Fibia 
        FBI</a><br>
        14 Marzo 2004<!-- #EndEditable --></p>
      <!-- #BeginLibraryItem "/Library/Toolbar2.lbi" -->
      <table width="80%" border="1" cellspacing="1" cellpadding="3" align="center" bordercolor="#000000" class="dontprint">
        <tr> 
          <td align="center" valign="top" width="33%"><img src="../images/icons/tool%20download.gif" width="16" height="18" border="0" alt="Scarica il progetto"><br>
            <span class="size1">Scarica il progetto</span></td>
          <td align="center" valign="top" width="33%"><a href="javascript:ScaricaPDF();"><img src="../images/icons/tool%20pdf.gif" width="16" height="18" alt="Scarica il testo dell'articolo" border="0"><br>
            <span class="size1">Scarica il testo dell'articolo</span></a></td>
          <td align="center" valign="top" width="33%"><a href="javascript:Stampa();"><img src="../images/icons/tool%20print.gif" width="16" height="18" alt="Stampa l'articolo" border="0"><br>
            <span class="size1">Stampa l'articolo</span></a></td>
        </tr>
      </table><!-- #EndLibraryItem -->
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="2" cellpadding="2">
  <tr>
    <td align="left"><a href="index.htm"><img src="../images/vbprev.jpg" width="49" height="32" align="absmiddle" border="0"> 
      Torna all'indice della sezione Database</a></td>
    <td align="right">&nbsp;</td>
  </tr>
</table>

<hr width="80%">
<table width="100%">
  <tr>
    <td width="100%" align="center">
      <script language="Javascript">Banner();</script>
      <!--#echo banner=""-->
    </td>
  </tr>
</table>
<script language="Javascript">FibiaWebStats();</script>
</body>
<!-- #EndTemplate --></html>
